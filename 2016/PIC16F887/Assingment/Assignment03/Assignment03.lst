CCS PCM C Compiler, Version 4.049, 25917               20-ат.б.-16 09:05

               Filename: Assignment03.lst

               ROM used: 237 words (3%)
                         Largest free fragment is 2048
               RAM used: 36 (10%) at main() level
                         36 (10%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include "D:\Work T.Pongsak\Microcontroller\Work\Assignment03\Assignment03.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                    	//High speed Osc (> 4mhz) 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES WRT_50%               	//Lower half of Program Memory is Write Protected 
....................  
.................... #use delay(clock=20000000) 
....................  
....................  
.................... #use delay (clock=20M) 
0004:  MOVLW  3C
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETLW  00
....................  
.................... void main() 
.................... { 
0018:  CLRF   04
0019:  BCF    03.7
001A:  MOVLW  1F
001B:  ANDWF  03,F
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
....................    char segment[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; 
*
0026:  MOVLW  3F
0027:  MOVWF  21
0028:  MOVLW  06
0029:  MOVWF  22
002A:  MOVLW  5B
002B:  MOVWF  23
002C:  MOVLW  4F
002D:  MOVWF  24
002E:  MOVLW  66
002F:  MOVWF  25
0030:  MOVLW  6D
0031:  MOVWF  26
0032:  MOVLW  7D
0033:  MOVWF  27
0034:  MOVLW  07
0035:  MOVWF  28
0036:  MOVLW  7F
0037:  MOVWF  29
0038:  MOVLW  6F
0039:  MOVWF  2A
....................    int i,com1,com2,sw,f; 
....................    int data[]={1,2,3,4,5,6}; 
003A:  MOVLW  01
003B:  MOVWF  30
003C:  MOVLW  02
003D:  MOVWF  31
003E:  MOVLW  03
003F:  MOVWF  32
0040:  MOVLW  04
0041:  MOVWF  33
0042:  MOVLW  05
0043:  MOVWF  34
0044:  MOVLW  06
0045:  MOVWF  35
....................    int data1[]={6,5,4,3,2,1}; 
0046:  MOVWF  36
0047:  MOVLW  05
0048:  MOVWF  37
0049:  MOVLW  04
004A:  MOVWF  38
004B:  MOVLW  03
004C:  MOVWF  39
004D:  MOVLW  02
004E:  MOVWF  3A
004F:  MOVLW  01
0050:  MOVWF  3B
....................    setup_adc_ports(NO_ANALOGS); 
0051:  BSF    03.5
0052:  BSF    1F.0
0053:  BSF    1F.1
0054:  BSF    1F.2
0055:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0056:  BCF    03.5
0057:  BCF    1F.0
....................    setup_psp(PSP_DISABLED); 
0058:  BSF    03.5
0059:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
*
0023:  MOVLW  FF
0024:  BCF    03.5
0025:  MOVWF  20
*
005A:  BCF    03.5
005B:  BCF    14.5
005C:  BCF    20.5
005D:  MOVF   20,W
005E:  BSF    03.5
005F:  MOVWF  07
0060:  BCF    03.5
0061:  BSF    20.4
0062:  MOVF   20,W
0063:  BSF    03.5
0064:  MOVWF  07
0065:  BCF    03.5
0066:  BCF    20.3
0067:  MOVF   20,W
0068:  BSF    03.5
0069:  MOVWF  07
006A:  MOVLW  01
006B:  BCF    03.5
006C:  MOVWF  14
006D:  MOVLW  00
006E:  BSF    03.5
006F:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0070:  MOVF   01,W
0071:  ANDLW  C7
0072:  IORLW  08
0073:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0074:  BCF    03.5
0075:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0076:  MOVLW  00
0077:  MOVWF  78
0078:  MOVWF  12
0079:  MOVLW  00
007A:  BSF    03.5
007B:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
007C:  MOVLW  07
007D:  MOVWF  1C
007E:  MOVF   05,W
007F:  MOVLW  10
0080:  MOVWF  77
0081:  DECFSZ 77,F
0082:  GOTO   081
0083:  NOP
0084:  MOVF   1C,W
0085:  BCF    03.5
0086:  BCF    0D.6
....................    setup_vref(FALSE); 
0087:  BSF    03.5
0088:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................    set_tris_d(0x80); 
0089:  MOVLW  80
008A:  MOVWF  08
....................    set_tris_c(0xc0); 
008B:  MOVLW  C0
008C:  MOVWF  07
008D:  BCF    03.5
008E:  MOVWF  20
....................    f=0; 
008F:  CLRF   2F
....................    while(1){ 
....................       sw = input(PIN_C7); 
0090:  BSF    20.7
0091:  MOVF   20,W
0092:  BSF    03.5
0093:  MOVWF  07
0094:  BCF    03.5
0095:  CLRF   2E
0096:  BTFSC  07.7
0097:  INCF   2E,F
....................       delay_ms(1); 
0098:  MOVLW  01
0099:  MOVWF  3C
009A:  CALL   004
....................       if(sw==0){ 
009B:  MOVF   2E,F
009C:  BTFSS  03.2
009D:  GOTO   0B1
....................          f=~f; 
009E:  COMF   2F,F
....................          output_c(0xff); 
009F:  MOVLW  00
00A0:  MOVWF  20
00A1:  BSF    03.5
00A2:  CLRF   07
00A3:  MOVLW  FF
00A4:  BCF    03.5
00A5:  MOVWF  07
....................          do{ 
....................             sw = input(PIN_C7); 
00A6:  BSF    20.7
00A7:  MOVF   20,W
00A8:  BSF    03.5
00A9:  MOVWF  07
00AA:  BCF    03.5
00AB:  CLRF   2E
00AC:  BTFSC  07.7
00AD:  INCF   2E,F
....................            }while(sw==0); 
00AE:  MOVF   2E,F
00AF:  BTFSC  03.2
00B0:  GOTO   0A6
....................       } 
....................       com1 = 0b00000001; 
00B1:  MOVLW  01
00B2:  MOVWF  2C
....................       for(i=0;i<6;i++){ 
00B3:  CLRF   2B
00B4:  MOVF   2B,W
00B5:  SUBLW  05
00B6:  BTFSS  03.0
00B7:  GOTO   0EB
....................          com2 = ~com1; 
00B8:  MOVF   2C,W
00B9:  MOVWF  2D
00BA:  COMF   2D,F
....................          output_c(com2); 
00BB:  MOVLW  00
00BC:  MOVWF  20
00BD:  BSF    03.5
00BE:  CLRF   07
00BF:  BCF    03.5
00C0:  MOVF   2D,W
00C1:  MOVWF  07
....................          if(f==0){ 
00C2:  MOVF   2F,F
00C3:  BTFSS  03.2
00C4:  GOTO   0D5
....................          output_d(segment[data[i]]); 
00C5:  MOVLW  30
00C6:  ADDWF  2B,W
00C7:  MOVWF  04
00C8:  BCF    03.7
00C9:  MOVLW  21
00CA:  ADDWF  00,W
00CB:  MOVWF  04
00CC:  BCF    03.7
00CD:  MOVF   00,W
00CE:  MOVWF  3D
00CF:  BSF    03.5
00D0:  CLRF   08
00D1:  BCF    03.5
00D2:  MOVF   3D,W
00D3:  MOVWF  08
....................          }else{ 
00D4:  GOTO   0E4
....................          output_d(segment[data1[i]]); 
00D5:  MOVLW  36
00D6:  ADDWF  2B,W
00D7:  MOVWF  04
00D8:  BCF    03.7
00D9:  MOVLW  21
00DA:  ADDWF  00,W
00DB:  MOVWF  04
00DC:  BCF    03.7
00DD:  MOVF   00,W
00DE:  MOVWF  3D
00DF:  BSF    03.5
00E0:  CLRF   08
00E1:  BCF    03.5
00E2:  MOVF   3D,W
00E3:  MOVWF  08
....................          } 
....................          delay_ms(1); 
00E4:  MOVLW  01
00E5:  MOVWF  3C
00E6:  CALL   004
....................          com1 = com1<<1; 
00E7:  BCF    03.0
00E8:  RLF    2C,F
....................       } 
00E9:  INCF   2B,F
00EA:  GOTO   0B4
....................    } 
00EB:  GOTO   090
.................... } 
00EC:  SLEEP

Configuration Fuses:
   Word  1: 393A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD WRT_50%
