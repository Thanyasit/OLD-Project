CCS PCM C Compiler, Version 4.049, 25917               05-¡.¤.-16 20:01

               Filename: Assignment05.lst

               ROM used: 171 words (2%)
                         Largest free fragment is 2048
               RAM used: 13 (4%) at main() level
                         16 (4%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include "D:\Work T.Pongsak\Microcontroller\Work\Assignment05\Assignment05.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                    	//High speed Osc (> 4mhz) 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES WRT_50%               	//Lower half of Program Memory is Write Protected 
....................  
.................... #use delay(clock=20000000) 
....................  
....................  
....................  
....................  
.................... void main() 
.................... { 
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
....................    int time,time10,sec=0,s5,s10,s; 
*
0027:  CLRF   23
....................    setup_adc_ports(NO_ANALOGS); 
0028:  BSF    03.5
0029:  BSF    1F.0
002A:  BSF    1F.1
002B:  BSF    1F.2
002C:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
002D:  BCF    03.5
002E:  BCF    1F.0
....................    setup_psp(PSP_DISABLED); 
002F:  BSF    03.5
0030:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
*
0024:  MOVLW  FF
0025:  BCF    03.5
0026:  MOVWF  20
*
0031:  BCF    03.5
0032:  BCF    14.5
0033:  BCF    20.5
0034:  MOVF   20,W
0035:  BSF    03.5
0036:  MOVWF  07
0037:  BCF    03.5
0038:  BSF    20.4
0039:  MOVF   20,W
003A:  BSF    03.5
003B:  MOVWF  07
003C:  BCF    03.5
003D:  BCF    20.3
003E:  MOVF   20,W
003F:  BSF    03.5
0040:  MOVWF  07
0041:  MOVLW  01
0042:  BCF    03.5
0043:  MOVWF  14
0044:  MOVLW  00
0045:  BSF    03.5
0046:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0047:  MOVF   01,W
0048:  ANDLW  C7
0049:  IORLW  08
004A:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
004B:  BCF    03.5
004C:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
004D:  MOVLW  00
004E:  MOVWF  78
004F:  MOVWF  12
0050:  MOVLW  00
0051:  BSF    03.5
0052:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0053:  MOVLW  07
0054:  MOVWF  1C
0055:  MOVF   05,W
0056:  MOVLW  10
0057:  MOVWF  77
0058:  DECFSZ 77,F
0059:  GOTO   058
005A:  NOP
005B:  MOVF   1C,W
005C:  BCF    03.5
005D:  BCF    0D.6
....................    setup_vref(FALSE); 
005E:  BSF    03.5
005F:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................    setup_timer_0(RTCC_DIV_256); 
0060:  MOVF   01,W
0061:  ANDLW  C0
0062:  IORLW  07
0063:  MOVWF  01
....................    set_timer0(61); 
0064:  MOVLW  3D
0065:  BCF    03.5
0066:  MOVWF  01
....................    set_tris_d(0xf0); 
0067:  MOVLW  F0
0068:  BSF    03.5
0069:  MOVWF  08
....................    output_d(0x00); 
006A:  CLRF   08
006B:  BCF    03.5
006C:  CLRF   08
....................    while(1){ 
....................       time = get_timer0(); 
006D:  MOVF   01,W
006E:  MOVWF  21
....................       if(time==0){ 
006F:  MOVF   21,F
0070:  BTFSS  03.2
0071:  GOTO   0A9
....................          time10++; 
0072:  INCF   22,F
....................          if(time10==100){ 
0073:  MOVF   22,W
0074:  SUBLW  64
0075:  BTFSS  03.2
0076:  GOTO   0A7
....................             time10 = 0; 
0077:  CLRF   22
....................             sec++; 
0078:  INCF   23,F
....................             s = sec%2; 
0079:  MOVF   23,W
007A:  ANDLW  01
007B:  MOVWF  26
....................             s5 = sec%5; 
007C:  MOVF   23,W
007D:  MOVWF  27
007E:  MOVLW  05
007F:  MOVWF  28
0080:  CALL   004
0081:  MOVF   77,W
0082:  MOVWF  24
....................             s10 = sec%10;       
0083:  MOVF   23,W
0084:  MOVWF  27
0085:  MOVLW  0A
0086:  MOVWF  28
0087:  CALL   004
0088:  MOVF   77,W
0089:  MOVWF  25
.................... /*          if(sec==2){ 
....................             output_toggle(PIN_D1); 
....................             } 
....................             if(sec==4){ 
....................             output_toggle(PIN_D1); 
....................             } 
....................             if(sec==6){                   //x=sec%5; 
....................             output_toggle(PIN_D1); 
....................             } 
....................             if(sec==8){ 
....................             output_toggle(PIN_D1); 
....................             } 
....................             if(sec==5){ 
....................             output_toggle(PIN_D2); 
....................             } 
....................             if(sec==10){ 
....................             sec = 0; 
....................             output_toggle(PIN_D1); 
....................             output_toggle(PIN_D2); 
....................             output_toggle(PIN_D3); 
....................             } 
.................... */ 
....................             if(s==0){ 
008A:  MOVF   26,F
008B:  BTFSS  03.2
008C:  GOTO   092
....................             output_toggle(PIN_D1); 
008D:  BSF    03.5
008E:  BCF    08.1
008F:  MOVLW  02
0090:  BCF    03.5
0091:  XORWF  08,F
....................             }  
....................             if(s5==0){ 
0092:  MOVF   24,F
0093:  BTFSS  03.2
0094:  GOTO   09A
....................             output_toggle(PIN_D2); 
0095:  BSF    03.5
0096:  BCF    08.2
0097:  MOVLW  04
0098:  BCF    03.5
0099:  XORWF  08,F
....................             } 
....................             if(s10==0){ 
009A:  MOVF   25,F
009B:  BTFSS  03.2
009C:  GOTO   0A2
....................             output_toggle(PIN_D3); 
009D:  BSF    03.5
009E:  BCF    08.3
009F:  MOVLW  08
00A0:  BCF    03.5
00A1:  XORWF  08,F
....................             }  
....................             output_toggle(PIN_D0); //toggle change present  
00A2:  BSF    03.5
00A3:  BCF    08.0
00A4:  MOVLW  01
00A5:  BCF    03.5
00A6:  XORWF  08,F
....................          } 
....................          set_timer0(61); 
00A7:  MOVLW  3D
00A8:  MOVWF  01
....................      } 
....................    } 
00A9:  GOTO   06D
.................... } 
00AA:  SLEEP

Configuration Fuses:
   Word  1: 393A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD WRT_50%
