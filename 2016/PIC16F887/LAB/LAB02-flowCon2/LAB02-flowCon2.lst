CCS PCM C Compiler, Version 4.049, 25917               06-ат.б.-16 11:57

               Filename: LAB02-flowCon2.lst

               ROM used: 197 words (2%)
                         Largest free fragment is 2048
               RAM used: 19 (5%) at main() level
                         19 (5%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include "D:\Work T.Pongsak\Microcontroller\Work\LAB02-flowCon2\LAB02-flowCon2.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                    	//High speed Osc (> 4mhz) 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES WRT_50%               	//Lower half of Program Memory is Write Protected 
....................  
.................... #use delay(clock=20000000) 
....................  
....................  
.................... #use delay (clock=20M) 
....................  
.................... void main() 
.................... { 
0004:  CLRF   04
0005:  BCF    03.7
0006:  MOVLW  1F
0007:  ANDWF  03,F
0008:  BSF    03.5
0009:  BSF    1F.0
000A:  BSF    1F.1
000B:  BSF    1F.2
000C:  BCF    1F.3
000D:  MOVLW  07
000E:  MOVWF  1C
....................    int i; 
....................    char segment[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; 
*
0012:  MOVLW  3F
0013:  MOVWF  22
0014:  MOVLW  06
0015:  MOVWF  23
0016:  MOVLW  5B
0017:  MOVWF  24
0018:  MOVLW  4F
0019:  MOVWF  25
001A:  MOVLW  66
001B:  MOVWF  26
001C:  MOVLW  6D
001D:  MOVWF  27
001E:  MOVLW  7D
001F:  MOVWF  28
0020:  MOVLW  07
0021:  MOVWF  29
0022:  MOVLW  7F
0023:  MOVWF  2A
0024:  MOVLW  6F
0025:  MOVWF  2B
....................    char y; 
....................    setup_adc_ports(NO_ANALOGS); 
0026:  BSF    03.5
0027:  BSF    1F.0
0028:  BSF    1F.1
0029:  BSF    1F.2
002A:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
002B:  BCF    03.5
002C:  BCF    1F.0
....................    setup_psp(PSP_DISABLED); 
002D:  BSF    03.5
002E:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
*
000F:  MOVLW  FF
0010:  BCF    03.5
0011:  MOVWF  20
*
002F:  BCF    03.5
0030:  BCF    14.5
0031:  BCF    20.5
0032:  MOVF   20,W
0033:  BSF    03.5
0034:  MOVWF  07
0035:  BCF    03.5
0036:  BSF    20.4
0037:  MOVF   20,W
0038:  BSF    03.5
0039:  MOVWF  07
003A:  BCF    03.5
003B:  BCF    20.3
003C:  MOVF   20,W
003D:  BSF    03.5
003E:  MOVWF  07
003F:  MOVLW  01
0040:  BCF    03.5
0041:  MOVWF  14
0042:  MOVLW  00
0043:  BSF    03.5
0044:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0045:  MOVF   01,W
0046:  ANDLW  C7
0047:  IORLW  08
0048:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0049:  BCF    03.5
004A:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
004B:  MOVLW  00
004C:  MOVWF  78
004D:  MOVWF  12
004E:  MOVLW  00
004F:  BSF    03.5
0050:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0051:  MOVLW  07
0052:  MOVWF  1C
0053:  MOVF   05,W
0054:  MOVLW  10
0055:  MOVWF  77
0056:  DECFSZ 77,F
0057:  GOTO   056
0058:  NOP
0059:  MOVF   1C,W
005A:  BCF    03.5
005B:  BCF    0D.6
....................    setup_vref(FALSE); 
005C:  BSF    03.5
005D:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................    set_tris_b(0x00); 
005E:  MOVLW  00
005F:  MOVWF  06
.................... /* 
....................    y = segment[9]; //Data come save y 
....................    output_b(y);//sent out port B 
....................    output_b(segment[9]); 
.................... */ 
.................... /*   while(1){  
....................       for(i=0;i<10;i++){  //i++ : i=i+1 
....................          output_b(segment[i]); 
....................          delay_ms(1000); 
....................       } 
.................... */ 
....................    y = 10; 
0060:  MOVLW  0A
0061:  BCF    03.5
0062:  MOVWF  2C
....................    switch(y){ 
0063:  MOVF   2C,W
0064:  BTFSC  03.2
0065:  GOTO   082
0066:  XORLW  01
0067:  BTFSC  03.2
0068:  GOTO   088
0069:  XORLW  03
006A:  BTFSC  03.2
006B:  GOTO   08E
006C:  XORLW  01
006D:  BTFSC  03.2
006E:  GOTO   094
006F:  XORLW  07
0070:  BTFSC  03.2
0071:  GOTO   09A
0072:  XORLW  01
0073:  BTFSC  03.2
0074:  GOTO   0A0
0075:  XORLW  03
0076:  BTFSC  03.2
0077:  GOTO   0A6
0078:  XORLW  01
0079:  BTFSC  03.2
007A:  GOTO   0AC
007B:  XORLW  0F
007C:  BTFSC  03.2
007D:  GOTO   0B2
007E:  XORLW  01
007F:  BTFSC  03.2
0080:  GOTO   0B8
0081:  GOTO   0BE
....................       case 0: 
....................          output_b(segment[0]); 
0082:  BSF    03.5
0083:  CLRF   06
0084:  BCF    03.5
0085:  MOVF   22,W
0086:  MOVWF  06
....................          break; 
0087:  GOTO   0C4
....................       case 1: 
....................          output_b(segment[1]); 
0088:  BSF    03.5
0089:  CLRF   06
008A:  BCF    03.5
008B:  MOVF   23,W
008C:  MOVWF  06
....................          break; 
008D:  GOTO   0C4
....................       case 2: 
....................          output_b(segment[2]); 
008E:  BSF    03.5
008F:  CLRF   06
0090:  BCF    03.5
0091:  MOVF   24,W
0092:  MOVWF  06
....................          break; 
0093:  GOTO   0C4
....................       case 3: 
....................          output_b(segment[3]); 
0094:  BSF    03.5
0095:  CLRF   06
0096:  BCF    03.5
0097:  MOVF   25,W
0098:  MOVWF  06
....................          break; 
0099:  GOTO   0C4
....................       case 4: 
....................          output_b(segment[4]); 
009A:  BSF    03.5
009B:  CLRF   06
009C:  BCF    03.5
009D:  MOVF   26,W
009E:  MOVWF  06
....................          break; 
009F:  GOTO   0C4
....................       case 5: 
....................          output_b(segment[5]); 
00A0:  BSF    03.5
00A1:  CLRF   06
00A2:  BCF    03.5
00A3:  MOVF   27,W
00A4:  MOVWF  06
....................          break; 
00A5:  GOTO   0C4
....................       case 6: 
....................          output_b(segment[6]); 
00A6:  BSF    03.5
00A7:  CLRF   06
00A8:  BCF    03.5
00A9:  MOVF   28,W
00AA:  MOVWF  06
....................          break; 
00AB:  GOTO   0C4
....................       case 7: 
....................          output_b(segment[7]); 
00AC:  BSF    03.5
00AD:  CLRF   06
00AE:  BCF    03.5
00AF:  MOVF   29,W
00B0:  MOVWF  06
....................          break; 
00B1:  GOTO   0C4
....................       case 8: 
....................          output_b(segment[8]); 
00B2:  BSF    03.5
00B3:  CLRF   06
00B4:  BCF    03.5
00B5:  MOVF   2A,W
00B6:  MOVWF  06
....................          break; 
00B7:  GOTO   0C4
....................       case 9: 
....................          output_b(segment[9]); 
00B8:  BSF    03.5
00B9:  CLRF   06
00BA:  BCF    03.5
00BB:  MOVF   2B,W
00BC:  MOVWF  06
....................          break; 
00BD:  GOTO   0C4
....................       default: 
....................          output_b(0x40); 
00BE:  BSF    03.5
00BF:  CLRF   06
00C0:  MOVLW  40
00C1:  BCF    03.5
00C2:  MOVWF  06
....................          break; 
00C3:  GOTO   0C4
....................    } 
....................     
.................... } 
00C4:  SLEEP

Configuration Fuses:
   Word  1: 393A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD WRT_50%
