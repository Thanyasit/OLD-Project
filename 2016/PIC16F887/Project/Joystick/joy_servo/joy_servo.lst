;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 23/12/2009 14:19:54
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0529	$	_Mul_16x16_S:
$0529	$1303			BCF	STATUS, RP1
$052A	$1283			BCF	STATUS, RP0
$052B	$01FB			CLRF	STACK_11
$052C	$01FA			CLRF	STACK_10
$052D	$01F9			CLRF	STACK_9
$052E	$3080			MOVLW	128
$052F	$00F8			MOVWF	STACK_8
$0530	$01FD			CLRF	STACK_13
$0531	$1FF1			BTFSS	STACK_1, 7
$0532	$2D39			GOTO	$+7
$0533	$09F1			COMF	STACK_1, F
$0534	$09F0			COMF	STACK_0, F
$0535	$0AF0			INCF	STACK_0, F
$0536	$1903			BTFSC	STATUS, Z
$0537	$0AF1			INCF	STACK_1, F
$0538	$0AFD			INCF	STACK_13, F
$0539	$1FF5			BTFSS	STACK_5, 7
$053A	$2D41			GOTO	$+7
$053B	$09F5			COMF	STACK_5, F
$053C	$09F4			COMF	STACK_4, F
$053D	$0AF4			INCF	STACK_4, F
$053E	$1903			BTFSC	STATUS, Z
$053F	$0AF5			INCF	STACK_5, F
$0540	$0AFD			INCF	STACK_13, F
$0541	$0CF1			RRF	STACK_1, F
$0542	$0CF0			RRF	STACK_0, F
$0543	$1C03			BTFSS	STATUS, C
$0544	$2D4E			GOTO	$+10
$0545	$0874			MOVF	STACK_4, W
$0546	$07F9			ADDWF	STACK_9, F
$0547	$0875			MOVF	STACK_5, W
$0548	$1803			BTFSC	STATUS, C
$0549	$0F75			INCFSZ	STACK_5, W
$054A	$07FA			ADDWF	STACK_10, F
$054B	$1803			BTFSC	STATUS, C
$054C	$0AFB			INCF	STACK_11, F
$054D	$1003			BCF	STATUS, C
$054E	$1FF0			BTFSS	STACK_0, 7
$054F	$2D56			GOTO	$+7
$0550	$0874			MOVF	STACK_4, W
$0551	$07FA			ADDWF	STACK_10, F
$0552	$1803			BTFSC	STATUS, C
$0553	$0AFB			INCF	STACK_11, F
$0554	$0875			MOVF	STACK_5, W
$0555	$07FB			ADDWF	STACK_11, F
$0556	$0CFB			RRF	STACK_11, F
$0557	$0CFA			RRF	STACK_10, F
$0558	$0CF9			RRF	STACK_9, F
$0559	$0CF8			RRF	STACK_8, F
$055A	$1C03			BTFSS	STATUS, C
$055B	$2D41			GOTO	$-26
$055C	$1C7D			BTFSS	STACK_13, 0
$055D	$2D69			GOTO	$+12
$055E	$09FB			COMF	STACK_11, F
$055F	$09FA			COMF	STACK_10, F
$0560	$09F9			COMF	STACK_9, F
$0561	$09F8			COMF	STACK_8, F
$0562	$0AF8			INCF	STACK_8, F
$0563	$1903			BTFSC	STATUS, Z
$0564	$0AF9			INCF	STACK_9, F
$0565	$1903			BTFSC	STATUS, Z
$0566	$0AFA			INCF	STACK_10, F
$0567	$1903			BTFSC	STATUS, Z
$0568	$0AFB			INCF	STACK_11, F
$0569	$087B			MOVF	STACK_11, W
$056A	$00F3			MOVWF	STACK_3
$056B	$087A			MOVF	STACK_10, W
$056C	$00F2			MOVWF	STACK_2
$056D	$0879			MOVF	STACK_9, W
$056E	$00F1			MOVWF	STACK_1
$056F	$0878			MOVF	STACK_8, W
$0570	$00F0			MOVWF	STACK_0
$0571	$0000			NOP
$0572	$0008			RETURN
$0573	$	_PWM1_Change_Duty:
$0573	$1303			BCF	STATUS, RP1
$0574	$1683			BSF	STATUS, RP0
$0575	$0812			MOVF	PR2, 0
$0576	$3F01			ADDLW	1
$0577	$00F0			MOVWF	STACK_0
$0578	$01F1			CLRF	STACK_0+1
$0579	$1803			BTFSC	STATUS, C
$057A	$0AF1			INCF	STACK_0+1, 1
$057B	$1283			BCF	STATUS, RP0
$057C	$0830			MOVF	FARG_PWM1_Change_Duty+0, 0
$057D	$00F4			MOVWF	STACK_4
$057E	$01F5			CLRF	STACK_4+1
$057F	$2529			CALL	_mul_16x16_s
$0580	$3006			MOVLW	6
$0581	$00F2			MOVWF	STACK_2
$0582	$0870			MOVF	STACK_0, 0
$0583	$00F4			MOVWF	STACK_4
$0584	$0871			MOVF	STACK_0+1, 0
$0585	$00F5			MOVWF	STACK_4+1
$0586	$0872			MOVF	STACK_2, 0
$0587	$	L_PWM1_Change_Duty_2:
$0587	$1903			BTFSC	STATUS, Z
$0588	$2D8E			GOTO	L_PWM1_Change_Duty_3
$0589	$0CF5			RRF	STACK_4+1, 1
$058A	$0CF4			RRF	STACK_4, 1
$058B	$13F5			BCF	STACK_4+1, 7
$058C	$3FFF			ADDLW	255
$058D	$2D87			GOTO	L_PWM1_Change_Duty_2
$058E	$	L_PWM1_Change_Duty_3:
$058E	$0874			MOVF	STACK_4, 0
$058F	$00F0			MOVWF	STACK_0
$0590	$0DF0			RLF	STACK_0, 1
$0591	$1070			BCF	STACK_0, 0
$0592	$0DF0			RLF	STACK_0, 1
$0593	$1070			BCF	STACK_0, 0
$0594	$0DF0			RLF	STACK_0, 1
$0595	$1070			BCF	STACK_0, 0
$0596	$0DF0			RLF	STACK_0, 1
$0597	$1070			BCF	STACK_0, 0
$0598	$3030			MOVLW	48
$0599	$0570			ANDWF	STACK_0, 0
$059A	$00F3			MOVWF	STACK_3
$059B	$0874			MOVF	STACK_4, 0
$059C	$00F0			MOVWF	STACK_0
$059D	$0875			MOVF	STACK_4+1, 0
$059E	$00F1			MOVWF	STACK_0+1
$059F	$0CF1			RRF	STACK_0+1, 1
$05A0	$0CF0			RRF	STACK_0, 1
$05A1	$13F1			BCF	STACK_0+1, 7
$05A2	$0CF1			RRF	STACK_0+1, 1
$05A3	$0CF0			RRF	STACK_0, 1
$05A4	$13F1			BCF	STACK_0+1, 7
$05A5	$0870			MOVF	STACK_0, 0
$05A6	$0095			MOVWF	CCPR1L
$05A7	$300F			MOVLW	15
$05A8	$0597			ANDWF	CCP1CON, 1
$05A9	$0873			MOVF	STACK_3, 0
$05AA	$0497			IORWF	CCP1CON, 1
$05AB	$0008			RETURN
$05AC	$	_PWM2_Change_Duty:
$05AC	$1303			BCF	STATUS, RP1
$05AD	$1683			BSF	STATUS, RP0
$05AE	$0812			MOVF	PR2, 0
$05AF	$3F01			ADDLW	1
$05B0	$00F0			MOVWF	STACK_0
$05B1	$01F1			CLRF	STACK_0+1
$05B2	$1803			BTFSC	STATUS, C
$05B3	$0AF1			INCF	STACK_0+1, 1
$05B4	$1283			BCF	STATUS, RP0
$05B5	$0830			MOVF	FARG_PWM2_Change_Duty+0, 0
$05B6	$00F4			MOVWF	STACK_4
$05B7	$01F5			CLRF	STACK_4+1
$05B8	$2529			CALL	_mul_16x16_s
$05B9	$3006			MOVLW	6
$05BA	$00F2			MOVWF	STACK_2
$05BB	$0870			MOVF	STACK_0, 0
$05BC	$00F4			MOVWF	STACK_4
$05BD	$0871			MOVF	STACK_0+1, 0
$05BE	$00F5			MOVWF	STACK_4+1
$05BF	$0872			MOVF	STACK_2, 0
$05C0	$	L_PWM2_Change_Duty_0:
$05C0	$1903			BTFSC	STATUS, Z
$05C1	$2DC7			GOTO	L_PWM2_Change_Duty_1
$05C2	$0CF5			RRF	STACK_4+1, 1
$05C3	$0CF4			RRF	STACK_4, 1
$05C4	$13F5			BCF	STACK_4+1, 7
$05C5	$3FFF			ADDLW	255
$05C6	$2DC0			GOTO	L_PWM2_Change_Duty_0
$05C7	$	L_PWM2_Change_Duty_1:
$05C7	$0874			MOVF	STACK_4, 0
$05C8	$00F0			MOVWF	STACK_0
$05C9	$0DF0			RLF	STACK_0, 1
$05CA	$1070			BCF	STACK_0, 0
$05CB	$0DF0			RLF	STACK_0, 1
$05CC	$1070			BCF	STACK_0, 0
$05CD	$0DF0			RLF	STACK_0, 1
$05CE	$1070			BCF	STACK_0, 0
$05CF	$0DF0			RLF	STACK_0, 1
$05D0	$1070			BCF	STACK_0, 0
$05D1	$3030			MOVLW	48
$05D2	$0570			ANDWF	STACK_0, 0
$05D3	$00F3			MOVWF	STACK_3
$05D4	$0874			MOVF	STACK_4, 0
$05D5	$00F0			MOVWF	STACK_0
$05D6	$0875			MOVF	STACK_4+1, 0
$05D7	$00F1			MOVWF	STACK_0+1
$05D8	$0CF1			RRF	STACK_0+1, 1
$05D9	$0CF0			RRF	STACK_0, 1
$05DA	$13F1			BCF	STACK_0+1, 7
$05DB	$0CF1			RRF	STACK_0+1, 1
$05DC	$0CF0			RRF	STACK_0, 1
$05DD	$13F1			BCF	STACK_0+1, 7
$05DE	$0870			MOVF	STACK_0, 0
$05DF	$009B			MOVWF	CCPR2L
$05E0	$300F			MOVLW	15
$05E1	$059D			ANDWF	CCP2CON, 1
$05E2	$0873			MOVF	STACK_3, 0
$05E3	$049D			IORWF	CCP2CON, 1
$05E4	$0008			RETURN
$0872	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$0872	$300F			MOVLW	15
$0873	$1303			BCF	STATUS, RP1
$0874	$1283			BCF	STATUS, RP0
$0875	$00FB			MOVWF	STACK_11
$0876	$30FF			MOVLW	255
$0877	$00FA			MOVWF	STACK_10
$0878	$0BFB			DECFSZ	STACK_11, F
$0879	$287B			GOTO	$+2
$087A	$287E			GOTO	$+4
$087B	$0BFA			DECFSZ	STACK_10, F
$087C	$287B			GOTO	$-1
$087D	$2878			GOTO	$-5
$087E	$303E			MOVLW	62
$087F	$00FA			MOVWF	STACK_10
$0880	$0BFA			DECFSZ	STACK_10, F
$0881	$2880			GOTO	$-1
;delays.c,33 :: 		}
$0882	$0008			RETURN
$08D0	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$08D0	$0000			NOP
$08D1	$0000			NOP
;delays.c,9 :: 		}
$08D2	$0008			RETURN
$08BD	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$08BD	$3021			MOVLW	33
$08BE	$1303			BCF	STATUS, RP1
$08BF	$1283			BCF	STATUS, RP0
$08C0	$00FA			MOVWF	STACK_10
$08C1	$0BFA			DECFSZ	STACK_10, F
$08C2	$28C1			GOTO	$-1
;delays.c,21 :: 		}
$08C3	$0008			RETURN
$089D	$	_PWM1_Start:
$089D	$1303			BCF	STATUS, RP1
$089E	$1683			BSF	STATUS, RP0
$089F	$1107			BCF	TRISC, 2
$08A0	$1283			BCF	STATUS, RP0
$08A1	$1512			BSF	T2CON, 2
$08A2	$300C			MOVLW	12
$08A3	$0497			IORWF	CCP1CON, 1
$08A4	$0008			RETURN
$08B5	$	_PWM2_Start:
$08B5	$1303			BCF	STATUS, RP1
$08B6	$1683			BSF	STATUS, RP0
$08B7	$1087			BCF	TRISC, 1
$08B8	$1283			BCF	STATUS, RP0
$08B9	$1512			BSF	T2CON, 2
$08BA	$300C			MOVLW	12
$08BB	$049D			IORWF	CCP2CON, 1
$08BC	$0008			RETURN
$08CA	$	_PWM1_Init:
$08CA	$1303			BCF	STATUS, RP1
$08CB	$1283			BCF	STATUS, RP0
$08CC	$0195			CLRF	CCPR1L, 1
$08CD	$1217			BCF	CCP1CON, 4
$08CE	$1297			BCF	CCP1CON, 5
$08CF	$0008			RETURN
$08C4	$	_PWM2_Init:
$08C4	$1303			BCF	STATUS, RP1
$08C5	$1283			BCF	STATUS, RP0
$08C6	$019B			CLRF	CCPR2L, 1
$08C7	$121D			BCF	CCP2CON, 4
$08C8	$129D			BCF	CCP2CON, 5
$08C9	$0008			RETURN
$08AD	$	_PWM1_Stop:
$08AD	$1303			BCF	STATUS, RP1
$08AE	$1683			BSF	STATUS, RP0
$08AF	$1507			BSF	TRISC, 2
$08B0	$1283			BCF	STATUS, RP0
$08B1	$1112			BCF	T2CON, 2
$08B2	$30F0			MOVLW	240
$08B3	$0597			ANDWF	CCP1CON, 1
$08B4	$0008			RETURN
$08A5	$	_PWM2_Stop:
$08A5	$1303			BCF	STATUS, RP1
$08A6	$1683			BSF	STATUS, RP0
$08A7	$1487			BSF	TRISC, 1
$08A8	$1283			BCF	STATUS, RP0
$08A9	$1112			BCF	T2CON, 2
$08AA	$30F0			MOVLW	240
$08AB	$059D			ANDWF	CCP2CON, 1
$08AC	$0008			RETURN
$0800	$	_front:
;joy_servo.c,37 :: 		void front()
;joy_servo.c,39 :: 		ANSELH=0x00;
$0800	$1703			BSF	STATUS, RP1
$0801	$1683			BSF	STATUS, RP0
$0802	$0189			CLRF	ANSELH, 1
;joy_servo.c,40 :: 		TRISD.F0=0;TRISD.F1=0;         //initial M1
$0803	$1303			BCF	STATUS, RP1
$0804	$1008			BCF	TRISD, 0
$0805	$1088			BCF	TRISD, 1
;joy_servo.c,41 :: 		TRISB.F1=0;TRISB.F2=0;         //initial M2
$0806	$1086			BCF	TRISB, 1
$0807	$1106			BCF	TRISB, 2
;joy_servo.c,42 :: 		TRISC.F1=0;TRISC.F2=0;         //Motor M-2 2E,Motor M-1 1E
$0808	$1087			BCF	TRISC, 1
$0809	$1107			BCF	TRISC, 2
;joy_servo.c,43 :: 		PORTC.F1=1;PORTC.F2=1;         //start Motor
$080A	$1283			BCF	STATUS, RP0
$080B	$1487			BSF	PORTC, 1
$080C	$1507			BSF	PORTC, 2
;joy_servo.c,44 :: 		Pwm1_Change_Duty(230);         //Motor M-1 75% Speed
$080D	$30E6			MOVLW	230
$080E	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$080F	$118A			BCF	PCLATH, 3
$0810	$2573			CALL	_PWM1_Change_Duty
$0811	$158A			BSF	PCLATH, 3
;joy_servo.c,45 :: 		Pwm2_Change_Duty(230);         //Motor M-2 75% Speed
$0812	$30E6			MOVLW	230
$0813	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$0814	$118A			BCF	PCLATH, 3
$0815	$25AC			CALL	_PWM2_Change_Duty
$0816	$158A			BSF	PCLATH, 3
;joy_servo.c,46 :: 		PORTD.F0=1;PORTD.F1=0;
$0817	$1408			BSF	PORTD, 0
$0818	$1088			BCF	PORTD, 1
;joy_servo.c,47 :: 		PORTB.F1=1;PORTB.F2=0;
$0819	$1486			BSF	PORTB, 1
$081A	$1106			BCF	PORTB, 2
;joy_servo.c,48 :: 		}
$081B	$0008			RETURN
$06E8	$	_turn_around_left:
;joy_servo.c,96 :: 		void turn_around_left()
;joy_servo.c,98 :: 		ANSELH=0x00;
$06E8	$1703			BSF	STATUS, RP1
$06E9	$1683			BSF	STATUS, RP0
$06EA	$0189			CLRF	ANSELH, 1
;joy_servo.c,99 :: 		TRISD.F0=0;TRISD.F1=0;         //initial M1
$06EB	$1303			BCF	STATUS, RP1
$06EC	$1008			BCF	TRISD, 0
$06ED	$1088			BCF	TRISD, 1
;joy_servo.c,100 :: 		TRISB.F1=0;TRISB.F2=0;         //initial M2
$06EE	$1086			BCF	TRISB, 1
$06EF	$1106			BCF	TRISB, 2
;joy_servo.c,101 :: 		TRISC.F1=0;TRISC.F2=0;         //Motor M-2 2E,Motor M-1 1E
$06F0	$1087			BCF	TRISC, 1
$06F1	$1107			BCF	TRISC, 2
;joy_servo.c,102 :: 		PORTC.F1=1;PORTC.F2=1;         //start Motor
$06F2	$1283			BCF	STATUS, RP0
$06F3	$1487			BSF	PORTC, 1
$06F4	$1507			BSF	PORTC, 2
;joy_servo.c,103 :: 		Pwm1_Change_Duty(230);         //Motor M-1 75% Speed
$06F5	$30E6			MOVLW	230
$06F6	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$06F7	$2573			CALL	_PWM1_Change_Duty
;joy_servo.c,104 :: 		Pwm2_Change_Duty(230);         //Motor M-2 75% Speed
$06F8	$30E6			MOVLW	230
$06F9	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$06FA	$25AC			CALL	_PWM2_Change_Duty
;joy_servo.c,105 :: 		PORTD.F0=0;PORTD.F1=1;
$06FB	$1008			BCF	PORTD, 0
$06FC	$1488			BSF	PORTD, 1
;joy_servo.c,106 :: 		PORTB.F1=1;PORTB.F2=0;
$06FD	$1486			BSF	PORTB, 1
$06FE	$1106			BCF	PORTB, 2
;joy_servo.c,107 :: 		}
$06FF	$0008			RETURN
$06D0	$	_turn_around_right:
;joy_servo.c,84 :: 		void turn_around_right()
;joy_servo.c,86 :: 		ANSELH=0x00;
$06D0	$1703			BSF	STATUS, RP1
$06D1	$1683			BSF	STATUS, RP0
$06D2	$0189			CLRF	ANSELH, 1
;joy_servo.c,87 :: 		TRISD.F0=0;TRISD.F1=0;         //initial M1
$06D3	$1303			BCF	STATUS, RP1
$06D4	$1008			BCF	TRISD, 0
$06D5	$1088			BCF	TRISD, 1
;joy_servo.c,88 :: 		TRISB.F1=0;TRISB.F2=0;         //initial M2
$06D6	$1086			BCF	TRISB, 1
$06D7	$1106			BCF	TRISB, 2
;joy_servo.c,89 :: 		TRISC.F1=0;TRISC.F2=0;         //Motor M-2 2E,Motor M-1 1E
$06D8	$1087			BCF	TRISC, 1
$06D9	$1107			BCF	TRISC, 2
;joy_servo.c,90 :: 		PORTC.F1=1;PORTC.F2=1;         //start Motor
$06DA	$1283			BCF	STATUS, RP0
$06DB	$1487			BSF	PORTC, 1
$06DC	$1507			BSF	PORTC, 2
;joy_servo.c,91 :: 		Pwm1_Change_Duty(230);         //Motor M-1 75% Speed
$06DD	$30E6			MOVLW	230
$06DE	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$06DF	$2573			CALL	_PWM1_Change_Duty
;joy_servo.c,92 :: 		Pwm2_Change_Duty(230);         //Motor M-2 75% Speed
$06E0	$30E6			MOVLW	230
$06E1	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$06E2	$25AC			CALL	_PWM2_Change_Duty
;joy_servo.c,93 :: 		PORTD.F0=1;PORTD.F1=0;
$06E3	$1408			BSF	PORTD, 0
$06E4	$1088			BCF	PORTD, 1
;joy_servo.c,94 :: 		PORTB.F1=0;PORTB.F2=1;
$06E5	$1086			BCF	PORTB, 1
$06E6	$1506			BSF	PORTB, 2
;joy_servo.c,95 :: 		}
$06E7	$0008			RETURN
$05E5	$	_crip_in:
;joy_servo.c,129 :: 		void crip_in()
;joy_servo.c,132 :: 		Delay_ms(10);
$05E5	$301A			MOVLW	26
$05E6	$1303			BCF	STATUS, RP1
$05E7	$1283			BCF	STATUS, RP0
$05E8	$00FB			MOVWF	STACK_11
$05E9	$30FF			MOVLW	255
$05EA	$00FA			MOVWF	STACK_10
$05EB	$0BFB			DECFSZ	STACK_11, F
$05EC	$2DEE			GOTO	$+2
$05ED	$2DF1			GOTO	$+4
$05EE	$0BFA			DECFSZ	STACK_10, F
$05EF	$2DEE			GOTO	$-1
$05F0	$2DEB			GOTO	$-5
$05F1	$30E7			MOVLW	231
$05F2	$00FA			MOVWF	STACK_10
$05F3	$0BFA			DECFSZ	STACK_10, F
$05F4	$2DF3			GOTO	$-1
$05F5	$0000			NOP
;joy_servo.c,133 :: 		PORTC.F5=1;
$05F6	$1687			BSF	PORTC, 5
;joy_servo.c,134 :: 		Delay_ms(2); // 2 ms Pulse
$05F7	$3006			MOVLW	6
$05F8	$00FB			MOVWF	STACK_11
$05F9	$30FF			MOVLW	255
$05FA	$00FA			MOVWF	STACK_10
$05FB	$0BFB			DECFSZ	STACK_11, F
$05FC	$2DFE			GOTO	$+2
$05FD	$2E01			GOTO	$+4
$05FE	$0BFA			DECFSZ	STACK_10, F
$05FF	$2DFE			GOTO	$-1
$0600	$2DFB			GOTO	$-5
$0601	$302C			MOVLW	44
$0602	$00FA			MOVWF	STACK_10
$0603	$0BFA			DECFSZ	STACK_10, F
$0604	$2E03			GOTO	$-1
$0605	$0000			NOP
$0606	$0000			NOP
;joy_servo.c,135 :: 		PORTC.F5=0;
$0607	$1287			BCF	PORTC, 5
;joy_servo.c,136 :: 		Delay_ms(20);
$0608	$3034			MOVLW	52
$0609	$00FB			MOVWF	STACK_11
$060A	$30FF			MOVLW	255
$060B	$00FA			MOVWF	STACK_10
$060C	$0BFB			DECFSZ	STACK_11, F
$060D	$2E0F			GOTO	$+2
$060E	$2E12			GOTO	$+4
$060F	$0BFA			DECFSZ	STACK_10, F
$0610	$2E0F			GOTO	$-1
$0611	$2E0C			GOTO	$-5
$0612	$30CF			MOVLW	207
$0613	$00FA			MOVWF	STACK_10
$0614	$0BFA			DECFSZ	STACK_10, F
$0615	$2E14			GOTO	$-1
$0616	$0000			NOP
;joy_servo.c,137 :: 		}
$0617	$0008			RETURN
$0618	$	_crip_out:
;joy_servo.c,120 :: 		void crip_out()
;joy_servo.c,123 :: 		Delay_ms(10);
$0618	$301A			MOVLW	26
$0619	$1303			BCF	STATUS, RP1
$061A	$1283			BCF	STATUS, RP0
$061B	$00FB			MOVWF	STACK_11
$061C	$30FF			MOVLW	255
$061D	$00FA			MOVWF	STACK_10
$061E	$0BFB			DECFSZ	STACK_11, F
$061F	$2E21			GOTO	$+2
$0620	$2E24			GOTO	$+4
$0621	$0BFA			DECFSZ	STACK_10, F
$0622	$2E21			GOTO	$-1
$0623	$2E1E			GOTO	$-5
$0624	$30E7			MOVLW	231
$0625	$00FA			MOVWF	STACK_10
$0626	$0BFA			DECFSZ	STACK_10, F
$0627	$2E26			GOTO	$-1
$0628	$0000			NOP
;joy_servo.c,124 :: 		PORTC.F5=1; // High
$0629	$1687			BSF	PORTC, 5
;joy_servo.c,125 :: 		Delay_ms(1); // 1 ms Pulse
$062A	$3003			MOVLW	3
$062B	$00FB			MOVWF	STACK_11
$062C	$30FF			MOVLW	255
$062D	$00FA			MOVWF	STACK_10
$062E	$0BFB			DECFSZ	STACK_11, F
$062F	$2E31			GOTO	$+2
$0630	$2E34			GOTO	$+4
$0631	$0BFA			DECFSZ	STACK_10, F
$0632	$2E31			GOTO	$-1
$0633	$2E2E			GOTO	$-5
$0634	$3096			MOVLW	150
$0635	$00FA			MOVWF	STACK_10
$0636	$0BFA			DECFSZ	STACK_10, F
$0637	$2E36			GOTO	$-1
;joy_servo.c,126 :: 		PORTC.F5=0; // Low
$0638	$1287			BCF	PORTC, 5
;joy_servo.c,127 :: 		Delay_ms(20); // 20 ms
$0639	$3034			MOVLW	52
$063A	$00FB			MOVWF	STACK_11
$063B	$30FF			MOVLW	255
$063C	$00FA			MOVWF	STACK_10
$063D	$0BFB			DECFSZ	STACK_11, F
$063E	$2E40			GOTO	$+2
$063F	$2E43			GOTO	$+4
$0640	$0BFA			DECFSZ	STACK_10, F
$0641	$2E40			GOTO	$-1
$0642	$2E3D			GOTO	$-5
$0643	$30CF			MOVLW	207
$0644	$00FA			MOVWF	STACK_10
$0645	$0BFA			DECFSZ	STACK_10, F
$0646	$2E45			GOTO	$-1
$0647	$0000			NOP
;joy_servo.c,128 :: 		}
$0648	$0008			RETURN
$0481	$	_Lcd_Init:
$0481	$158A			BSF	PCLATH, 3
$0482	$2072			CALL	_Delay_5500us
$0483	$118A			BCF	PCLATH, 3
$0484	$158A			BSF	PCLATH, 3
$0485	$2072			CALL	_Delay_5500us
$0486	$118A			BCF	PCLATH, 3
$0487	$158A			BSF	PCLATH, 3
$0488	$2072			CALL	_Delay_5500us
$0489	$118A			BCF	PCLATH, 3
$048A	$0829			MOVF	FARG_Lcd_Init+0, 0
$048B	$00A0			MOVWF	LCD_port_address
$048C	$0829			MOVF	FARG_Lcd_Init+0, 0
$048D	$0084			MOVWF	FSR
$048E	$1784			BSF	FSR, 7
$048F	$1180			BCF	INDF, ___ENABLE
$0490	$1100			BCF	INDF, ___RS
$0491	$1000			BCF	INDF, ___RW
$0492	$1380			BCF	INDF, ___DB7
$0493	$1300			BCF	INDF, ___DB6
$0494	$1280			BCF	INDF, ___DB5
$0495	$1200			BCF	INDF, ___DB4
$0496	$1384			BCF	FSR, 7
$0497	$1180			BCF	INDF, ___ENABLE
$0498	$1100			BCF	INDF, ___RS
$0499	$1000			BCF	INDF, ___RW
$049A	$1380			BCF	INDF, ___DB7
$049B	$1300			BCF	INDF, ___DB6
$049C	$1280			BCF	INDF, ___DB5
$049D	$1200			BCF	INDF, ___DB4
$049E	$1680			BSF	INDF, ___DB5
$049F	$1600			BSF	INDF, ___DB4
$04A0	$1580			BSF	INDF, ___ENABLE
$04A1	$1180			BCF	INDF, ___ENABLE
$04A2	$158A			BSF	PCLATH, 3
$04A3	$2072			CALL	_Delay_5500us
$04A4	$118A			BCF	PCLATH, 3
$04A5	$1580			BSF	INDF, ___ENABLE
$04A6	$1180			BCF	INDF, ___ENABLE
$04A7	$158A			BSF	PCLATH, 3
$04A8	$2072			CALL	_Delay_5500us
$04A9	$118A			BCF	PCLATH, 3
$04AA	$1580			BSF	INDF, ___ENABLE
$04AB	$1180			BCF	INDF, ___ENABLE
$04AC	$158A			BSF	PCLATH, 3
$04AD	$2072			CALL	_Delay_5500us
$04AE	$118A			BCF	PCLATH, 3
$04AF	$1680			BSF	INDF, ___DB5
$04B0	$1200			BCF	INDF, ___DB4
$04B1	$1580			BSF	INDF, ___ENABLE
$04B2	$1180			BCF	INDF, ___ENABLE
$04B3	$158A			BSF	PCLATH, 3
$04B4	$2072			CALL	_Delay_5500us
$04B5	$118A			BCF	PCLATH, 3
$04B6	$0180			CLRF	INDF
$04B7	$1680			BSF	INDF, ___DB5
$04B8	$1580			BSF	INDF, ___ENABLE
$04B9	$1180			BCF	INDF, ___ENABLE
$04BA	$0180			CLRF	INDF
$04BB	$1780			BSF	INDF, ___DB7
$04BC	$1580			BSF	INDF, ___ENABLE
$04BD	$1180			BCF	INDF, ___ENABLE
$04BE	$158A			BSF	PCLATH, 3
$04BF	$2072			CALL	_Delay_5500us
$04C0	$118A			BCF	PCLATH, 3
$04C1	$0180			CLRF	INDF
$04C2	$1600			BSF	INDF, ___DB4
$04C3	$1580			BSF	INDF, ___ENABLE
$04C4	$1180			BCF	INDF, ___ENABLE
$04C5	$0180			CLRF	INDF
$04C6	$1580			BSF	INDF, ___ENABLE
$04C7	$1180			BCF	INDF, ___ENABLE
$04C8	$158A			BSF	PCLATH, 3
$04C9	$2072			CALL	_Delay_5500us
$04CA	$118A			BCF	PCLATH, 3
$04CB	$0180			CLRF	INDF
$04CC	$1580			BSF	INDF, ___ENABLE
$04CD	$1180			BCF	INDF, ___ENABLE
$04CE	$1600			BSF	INDF, ___DB4
$04CF	$1580			BSF	INDF, ___ENABLE
$04D0	$1180			BCF	INDF, ___ENABLE
$04D1	$158A			BSF	PCLATH, 3
$04D2	$2072			CALL	_Delay_5500us
$04D3	$118A			BCF	PCLATH, 3
$04D4	$0180			CLRF	INDF
$04D5	$1580			BSF	INDF, ___ENABLE
$04D6	$1180			BCF	INDF, ___ENABLE
$04D7	$1600			BSF	INDF, ___DB4
$04D8	$1680			BSF	INDF, ___DB5
$04D9	$1700			BSF	INDF, ___DB6
$04DA	$1780			BSF	INDF, ___DB7
$04DB	$1580			BSF	INDF, ___ENABLE
$04DC	$1180			BCF	INDF, ___ENABLE
$04DD	$158A			BSF	PCLATH, 3
$04DE	$2072			CALL	_Delay_5500us
$04DF	$118A			BCF	PCLATH, 3
$04E0	$3001			MOVLW	1
$04E1	$00A1			MOVWF	LCD_cmd_status
$04E2	$0008			RETURN
$04E3	$	_Lcd_Cmd:
$04E3	$1303			BCF	STATUS, RP1
$04E4	$1283			BCF	STATUS, RP0
$04E5	$0820			MOVF	LCD_port_address, 0
$04E6	$0084			MOVWF	FSR
$04E7	$0829			MOVF	FARG_Lcd_Cmd+0, 0
$04E8	$1903			BTFSC	STATUS, Z
$04E9	$2CEA			GOTO	L_Lcd_Cmd_0
$04EA	$	L_Lcd_Cmd_0:
$04EA	$1180			BCF	INDF, ___ENABLE
$04EB	$1100			BCF	INDF, ___RS
$04EC	$1380			BCF	INDF, ___DB7
$04ED	$1300			BCF	INDF, ___DB6
$04EE	$1280			BCF	INDF, ___DB5
$04EF	$1200			BCF	INDF, ___DB4
$04F0	$1BA9			BTFSC	FARG_Lcd_Cmd+0, 7
$04F1	$1780			BSF	INDF, ___DB7
$04F2	$1B29			BTFSC	FARG_Lcd_Cmd+0, 6
$04F3	$1700			BSF	INDF, ___DB6
$04F4	$1AA9			BTFSC	FARG_Lcd_Cmd+0, 5
$04F5	$1680			BSF	INDF, ___DB5
$04F6	$1A29			BTFSC	FARG_Lcd_Cmd+0, 4
$04F7	$1600			BSF	INDF, ___DB4
$04F8	$0821			MOVF	LCD_cmd_status, 0
$04F9	$1903			BTFSC	STATUS, Z
$04FA	$2CFD			GOTO	L_Lcd_Cmd_1
$04FB	$1100			BCF	INDF, ___RS
$04FC	$2CFE			GOTO	L_Lcd_Cmd_2
$04FD	$	L_Lcd_Cmd_1:
$04FD	$1500			BSF	INDF, ___RS
$04FE	$	L_Lcd_Cmd_2:
$04FE	$1580			BSF	INDF, ___ENABLE
$04FF	$158A			BSF	PCLATH, 3
$0500	$20D0			CALL	_Delay_1us
$0501	$118A			BCF	PCLATH, 3
$0502	$0829			MOVF	FARG_Lcd_Cmd+0, 0
$0503	$1903			BTFSC	STATUS, Z
$0504	$2D05			GOTO	L_Lcd_Cmd_3
$0505	$	L_Lcd_Cmd_3:
$0505	$1180			BCF	INDF, ___ENABLE
$0506	$1100			BCF	INDF, ___RS
$0507	$1380			BCF	INDF, ___DB7
$0508	$1300			BCF	INDF, ___DB6
$0509	$1280			BCF	INDF, ___DB5
$050A	$1200			BCF	INDF, ___DB4
$050B	$19A9			BTFSC	FARG_Lcd_Cmd+0, 3
$050C	$1780			BSF	INDF, ___DB7
$050D	$1929			BTFSC	FARG_Lcd_Cmd+0, 2
$050E	$1700			BSF	INDF, ___DB6
$050F	$18A9			BTFSC	FARG_Lcd_Cmd+0, 1
$0510	$1680			BSF	INDF, ___DB5
$0511	$1829			BTFSC	FARG_Lcd_Cmd+0, 0
$0512	$1600			BSF	INDF, ___DB4
$0513	$0821			MOVF	LCD_cmd_status, 0
$0514	$1903			BTFSC	STATUS, Z
$0515	$2D18			GOTO	L_Lcd_Cmd_4
$0516	$1100			BCF	INDF, ___RS
$0517	$2D19			GOTO	L_Lcd_Cmd_5
$0518	$	L_Lcd_Cmd_4:
$0518	$1500			BSF	INDF, ___RS
$0519	$	L_Lcd_Cmd_5:
$0519	$1580			BSF	INDF, ___ENABLE
$051A	$158A			BSF	PCLATH, 3
$051B	$20D0			CALL	_Delay_1us
$051C	$118A			BCF	PCLATH, 3
$051D	$1180			BCF	INDF, ___ENABLE
$051E	$0821			MOVF	LCD_cmd_status, 0
$051F	$1903			BTFSC	STATUS, Z
$0520	$2D25			GOTO	L_Lcd_Cmd_6
$0521	$158A			BSF	PCLATH, 3
$0522	$2072			CALL	_Delay_5500us
$0523	$118A			BCF	PCLATH, 3
$0524	$2D28			GOTO	L_Lcd_Cmd_7
$0525	$	L_Lcd_Cmd_6:
$0525	$158A			BSF	PCLATH, 3
$0526	$20BD			CALL	_Delay_50us
$0527	$118A			BCF	PCLATH, 3
$0528	$	L_Lcd_Cmd_7:
$0528	$0008			RETURN
$0649	$	_PSX_TxRx:
;joy_servo.c,19 :: 		unsigned char PSX_TxRx(unsigned char BYTE_OUT){
;joy_servo.c,20 :: 		unsigned char BYTE_IN=0;
$0649	$1303			BCF	STATUS, RP1
$064A	$1283			BCF	STATUS, RP0
$064B	$01AA			CLRF	PSX_TxRx_BYTE_IN_L0, 1
;joy_servo.c,21 :: 		unsigned char j=0x01;
$064C	$3001			MOVLW	1
$064D	$00AB			MOVWF	PSX_TxRx_j_L0
;joy_servo.c,22 :: 		for (i=0;i<8;i++){                             // Loop 8 Time for Send and Recieve Byte
$064E	$01A2			CLRF	_i, 1
$064F	$	L_PSX_TxRx_0:
$064F	$3008			MOVLW	8
$0650	$0222			SUBWF	_i, 0
$0651	$1803			BTFSC	STATUS, C
$0652	$2E6E			GOTO	L_PSX_TxRx_1
;joy_servo.c,23 :: 		if ((BYTE_OUT&j)==j )                      // Test Bit 0 or 1
$0653	$082B			MOVF	PSX_TxRx_j_L0, 0
$0654	$0529			ANDWF	FARG_PSX_TxRx+0, 0
$0655	$00F1			MOVWF	STACK_1
$0656	$0871			MOVF	STACK_1, 0
$0657	$062B			XORWF	PSX_TxRx_j_L0, 0
$0658	$1D03			BTFSS	STATUS, Z
$0659	$2E5C			GOTO	L_PSX_TxRx_3
;joy_servo.c,24 :: 		{ DOUT=1;}                                 // Set Dout
$065A	$1485			BSF	PORTA, 1
$065B	$2E5D			GOTO	L_PSX_TxRx_4
$065C	$	L_PSX_TxRx_3:
;joy_servo.c,26 :: 		{ DOUT=0;}
$065C	$1085			BCF	PORTA, 1
$065D	$	L_PSX_TxRx_4:
;joy_servo.c,27 :: 		CLK=1;                                     // Clock Pulse High
$065D	$1405			BSF	PORTA, 0
;joy_servo.c,28 :: 		BYTE_IN=(BYTE_IN>>1);                      // Receive Byte LSB First
$065E	$0CAA			RRF	PSX_TxRx_BYTE_IN_L0, 1
$065F	$13AA			BCF	PSX_TxRx_BYTE_IN_L0, 7
;joy_servo.c,29 :: 		if (DIN==1){BYTE_IN=(BYTE_IN | 0x80);}
$0660	$3000			MOVLW	0
$0661	$1905			BTFSC	PORTA, 2
$0662	$3001			MOVLW	1
$0663	$00F1			MOVWF	STACK_1
$0664	$0871			MOVF	STACK_1, 0
$0665	$3A01			XORLW	1
$0666	$1D03			BTFSS	STATUS, Z
$0667	$2E69			GOTO	L_PSX_TxRx_5
$0668	$17AA			BSF	PSX_TxRx_BYTE_IN_L0, 7
$0669	$	L_PSX_TxRx_5:
;joy_servo.c,30 :: 		CLK=0;                                     // Clock Pulse Low
$0669	$1005			BCF	PORTA, 0
;joy_servo.c,31 :: 		j=j<<1;
$066A	$0DAB			RLF	PSX_TxRx_j_L0, 1
$066B	$102B			BCF	PSX_TxRx_j_L0, 0
;joy_servo.c,32 :: 		}
$066C	$	L_PSX_TxRx_2:
;joy_servo.c,22 :: 		for (i=0;i<8;i++){                             // Loop 8 Time for Send and Recieve Byte
$066C	$0AA2			INCF	_i, 1
;joy_servo.c,32 :: 		}
$066D	$2E4F			GOTO	L_PSX_TxRx_0
$066E	$	L_PSX_TxRx_1:
;joy_servo.c,33 :: 		return BYTE_IN;
$066E	$082A			MOVF	PSX_TxRx_BYTE_IN_L0, 0
$066F	$00F0			MOVWF	STACK_0
;joy_servo.c,34 :: 		}
$0670	$0008			RETURN
$0838	$	_back:
;joy_servo.c,49 :: 		void back()
;joy_servo.c,51 :: 		ANSELH=0x00;
$0838	$1703			BSF	STATUS, RP1
$0839	$1683			BSF	STATUS, RP0
$083A	$0189			CLRF	ANSELH, 1
;joy_servo.c,52 :: 		TRISD.F0=0;TRISD.F1=0;         //initial M1
$083B	$1303			BCF	STATUS, RP1
$083C	$1008			BCF	TRISD, 0
$083D	$1088			BCF	TRISD, 1
;joy_servo.c,53 :: 		TRISB.F1=0;TRISB.F2=0;         //initial M2
$083E	$1086			BCF	TRISB, 1
$083F	$1106			BCF	TRISB, 2
;joy_servo.c,54 :: 		TRISC.F1=0;TRISC.F2=0;         //Motor M-2 2E,Motor M-1 1E
$0840	$1087			BCF	TRISC, 1
$0841	$1107			BCF	TRISC, 2
;joy_servo.c,55 :: 		PORTC.F1=1;PORTC.F2=1;         //start Motor
$0842	$1283			BCF	STATUS, RP0
$0843	$1487			BSF	PORTC, 1
$0844	$1507			BSF	PORTC, 2
;joy_servo.c,56 :: 		Pwm1_Change_Duty(230);         //Motor M-1 75% Speed
$0845	$30E6			MOVLW	230
$0846	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$0847	$118A			BCF	PCLATH, 3
$0848	$2573			CALL	_PWM1_Change_Duty
$0849	$158A			BSF	PCLATH, 3
;joy_servo.c,57 :: 		Pwm2_Change_Duty(230);         //Motor M-2 75% Speed
$084A	$30E6			MOVLW	230
$084B	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$084C	$118A			BCF	PCLATH, 3
$084D	$25AC			CALL	_PWM2_Change_Duty
$084E	$158A			BSF	PCLATH, 3
;joy_servo.c,58 :: 		PORTD.F0=0;PORTD.F1=1;
$084F	$1008			BCF	PORTD, 0
$0850	$1488			BSF	PORTD, 1
;joy_servo.c,59 :: 		PORTB.F1=0;PORTB.F2=1;
$0851	$1086			BCF	PORTB, 1
$0852	$1506			BSF	PORTB, 2
;joy_servo.c,60 :: 		}
$0853	$0008			RETURN
$0863	$	_stop:
;joy_servo.c,108 :: 		void stop()
;joy_servo.c,110 :: 		Pwm1_Change_Duty(128);              // Motor M-1 50% Speed
$0863	$3080			MOVLW	128
$0864	$1303			BCF	STATUS, RP1
$0865	$1283			BCF	STATUS, RP0
$0866	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$0867	$118A			BCF	PCLATH, 3
$0868	$2573			CALL	_PWM1_Change_Duty
$0869	$158A			BSF	PCLATH, 3
;joy_servo.c,111 :: 		Pwm2_Change_Duty(128);              // Motor M-2 50% Speed
$086A	$3080			MOVLW	128
$086B	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$086C	$118A			BCF	PCLATH, 3
$086D	$25AC			CALL	_PWM2_Change_Duty
$086E	$158A			BSF	PCLATH, 3
;joy_servo.c,112 :: 		PORTC.F1=0;PORTC.F2=0;
$086F	$1087			BCF	PORTC, 1
$0870	$1107			BCF	PORTC, 2
;joy_servo.c,113 :: 		}
$0871	$0008			RETURN
$081C	$	_turn_left:
;joy_servo.c,72 :: 		void turn_left()
;joy_servo.c,74 :: 		ANSELH=0x00;
$081C	$1703			BSF	STATUS, RP1
$081D	$1683			BSF	STATUS, RP0
$081E	$0189			CLRF	ANSELH, 1
;joy_servo.c,75 :: 		TRISD.F0=0;TRISD.F1=0;         //initial M1
$081F	$1303			BCF	STATUS, RP1
$0820	$1008			BCF	TRISD, 0
$0821	$1088			BCF	TRISD, 1
;joy_servo.c,76 :: 		TRISB.F1=0;TRISB.F2=0;         //initial M2
$0822	$1086			BCF	TRISB, 1
$0823	$1106			BCF	TRISB, 2
;joy_servo.c,77 :: 		TRISC.F1=0;TRISC.F2=0;         //Motor M-2 2E,Motor M-1 1E
$0824	$1087			BCF	TRISC, 1
$0825	$1107			BCF	TRISC, 2
;joy_servo.c,78 :: 		PORTC.F1=1;PORTC.F2=0;         //start Motor
$0826	$1283			BCF	STATUS, RP0
$0827	$1487			BSF	PORTC, 1
$0828	$1107			BCF	PORTC, 2
;joy_servo.c,79 :: 		Pwm1_Change_Duty(230);         //Motor M-1 75% Speed
$0829	$30E6			MOVLW	230
$082A	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$082B	$118A			BCF	PCLATH, 3
$082C	$2573			CALL	_PWM1_Change_Duty
$082D	$158A			BSF	PCLATH, 3
;joy_servo.c,80 :: 		Pwm2_Change_Duty(230);         //Motor M-2 75% Speed
$082E	$30E6			MOVLW	230
$082F	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$0830	$118A			BCF	PCLATH, 3
$0831	$25AC			CALL	_PWM2_Change_Duty
$0832	$158A			BSF	PCLATH, 3
;joy_servo.c,81 :: 		PORTD.F0=0;PORTD.F1=1;
$0833	$1008			BCF	PORTD, 0
$0834	$1488			BSF	PORTD, 1
;joy_servo.c,82 :: 		PORTB.F1=1;PORTB.F2=0;
$0835	$1486			BSF	PORTB, 1
$0836	$1106			BCF	PORTB, 2
;joy_servo.c,83 :: 		}
$0837	$0008			RETURN
$0700	$	_turn_right:
;joy_servo.c,61 :: 		void turn_right()
;joy_servo.c,63 :: 		ANSELH=0x00;
$0700	$1703			BSF	STATUS, RP1
$0701	$1683			BSF	STATUS, RP0
$0702	$0189			CLRF	ANSELH, 1
;joy_servo.c,64 :: 		TRISD.F0=0;TRISD.F1=0;          //initial M1
$0703	$1303			BCF	STATUS, RP1
$0704	$1008			BCF	TRISD, 0
$0705	$1088			BCF	TRISD, 1
;joy_servo.c,65 :: 		TRISB.F1=0;TRISB.F2=0;         //initial M2
$0706	$1086			BCF	TRISB, 1
$0707	$1106			BCF	TRISB, 2
;joy_servo.c,66 :: 		TRISC.F1=0;TRISC.F2=0;         //Motor M-2 2E,Motor M-1 1E
$0708	$1087			BCF	TRISC, 1
$0709	$1107			BCF	TRISC, 2
;joy_servo.c,67 :: 		PORTC.F1=0;PORTC.F2=1;         //start Motor
$070A	$1283			BCF	STATUS, RP0
$070B	$1087			BCF	PORTC, 1
$070C	$1507			BSF	PORTC, 2
;joy_servo.c,68 :: 		Pwm1_Change_Duty(230);         //Motor M-1 75% Speed
$070D	$30E6			MOVLW	230
$070E	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$070F	$2573			CALL	_PWM1_Change_Duty
;joy_servo.c,69 :: 		Pwm2_Change_Duty(230);         //Motor M-2 75% Speed
$0710	$30E6			MOVLW	230
$0711	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$0712	$25AC			CALL	_PWM2_Change_Duty
;joy_servo.c,70 :: 		PORTD.F0=1;PORTD.F1=0;
$0713	$1408			BSF	PORTD, 0
$0714	$1088			BCF	PORTD, 1
;joy_servo.c,71 :: 		}
$0715	$0008			RETURN
$06B5	$	_start_pwm:
;joy_servo.c,138 :: 		void start_pwm()
;joy_servo.c,141 :: 		Pwm1_Init(5000);                    // Initail PWM 1E
$06B5	$1303			BCF	STATUS, RP1
$06B6	$1283			BCF	STATUS, RP0
$06B7	$1012			BCF	T2CON, T2CKPS0
$06B8	$1092			BCF	T2CON, T2CKPS1
$06B9	$1412			BSF	T2CON, T2CKPS0
$06BA	$3063			MOVLW	99
$06BB	$1683			BSF	STATUS, RP0
$06BC	$0092			MOVWF	PR2
$06BD	$158A			BSF	PCLATH, 3
$06BE	$20CA			CALL	_PWM1_Init
$06BF	$118A			BCF	PCLATH, 3
;joy_servo.c,142 :: 		Pwm2_Init(5000);                    // Initail PWM 2E
$06C0	$1012			BCF	T2CON, T2CKPS0
$06C1	$1092			BCF	T2CON, T2CKPS1
$06C2	$1412			BSF	T2CON, T2CKPS0
$06C3	$3063			MOVLW	99
$06C4	$1683			BSF	STATUS, RP0
$06C5	$0092			MOVWF	PR2
$06C6	$158A			BSF	PCLATH, 3
$06C7	$20C4			CALL	_PWM2_Init
$06C8	$118A			BCF	PCLATH, 3
;joy_servo.c,143 :: 		Pwm1_Start();
$06C9	$158A			BSF	PCLATH, 3
$06CA	$209D			CALL	_PWM1_Start
$06CB	$118A			BCF	PCLATH, 3
;joy_servo.c,144 :: 		Pwm2_Start();
$06CC	$158A			BSF	PCLATH, 3
$06CD	$20B5			CALL	_PWM2_Start
$06CE	$118A			BCF	PCLATH, 3
;joy_servo.c,145 :: 		}
$06CF	$0008			RETURN
$0854	$	_stop_pwm:
;joy_servo.c,146 :: 		void stop_pwm()
;joy_servo.c,148 :: 		Pwm1_Stop();
$0854	$20AD			CALL	_PWM1_Stop
;joy_servo.c,149 :: 		Pwm2_Stop();
$0855	$20A5			CALL	_PWM2_Stop
;joy_servo.c,150 :: 		Pwm1_Change_Duty(128);              // Motor M-1 50% Speed
$0856	$3080			MOVLW	128
$0857	$00B0			MOVWF	FARG_PWM1_Change_Duty+0
$0858	$118A			BCF	PCLATH, 3
$0859	$2573			CALL	_PWM1_Change_Duty
$085A	$158A			BSF	PCLATH, 3
;joy_servo.c,151 :: 		Pwm2_Change_Duty(128);              // Motor M-2 50% Speed
$085B	$3080			MOVLW	128
$085C	$00B0			MOVWF	FARG_PWM2_Change_Duty+0
$085D	$118A			BCF	PCLATH, 3
$085E	$25AC			CALL	_PWM2_Change_Duty
$085F	$158A			BSF	PCLATH, 3
;joy_servo.c,152 :: 		PORTC.F1=0;PORTC.F2=0;
$0860	$1087			BCF	PORTC, 1
$0861	$1107			BCF	PORTC, 2
;joy_servo.c,153 :: 		}
$0862	$0008			RETURN
$0343	$	_front_auto:
;joy_servo.c,154 :: 		void front_auto()
;joy_servo.c,156 :: 		while((C6==1 & C4==0 & C3==1)|(C6==0 & C4==1 & C3==1)|(C6==1 & C4==1 & C3==0))
$0343	$	L_front_auto_6:
$0343	$3000			MOVLW	0
$0344	$1303			BCF	STATUS, RP1
$0345	$1283			BCF	STATUS, RP0
$0346	$1B07			BTFSC	PORTC, 6
$0347	$3001			MOVLW	1
$0348	$00F1			MOVWF	STACK_1
$0349	$0871			MOVF	STACK_1, 0
$034A	$3A01			XORLW	1
$034B	$3001			MOVLW	1
$034C	$1D03			BTFSS	STATUS, Z
$034D	$3000			MOVLW	0
$034E	$00F2			MOVWF	STACK_2
$034F	$3000			MOVLW	0
$0350	$1A07			BTFSC	PORTC, 4
$0351	$3001			MOVLW	1
$0352	$00F1			MOVWF	STACK_1
$0353	$0871			MOVF	STACK_1, 0
$0354	$3A00			XORLW	0
$0355	$3001			MOVLW	1
$0356	$1D03			BTFSS	STATUS, Z
$0357	$3000			MOVLW	0
$0358	$00F0			MOVWF	STACK_0
$0359	$0870			MOVF	STACK_0, 0
$035A	$05F2			ANDWF	STACK_2, 1
$035B	$3000			MOVLW	0
$035C	$1987			BTFSC	PORTC, 3
$035D	$3001			MOVLW	1
$035E	$00F1			MOVWF	STACK_1
$035F	$0871			MOVF	STACK_1, 0
$0360	$3A01			XORLW	1
$0361	$3001			MOVLW	1
$0362	$1D03			BTFSS	STATUS, Z
$0363	$3000			MOVLW	0
$0364	$00F0			MOVWF	STACK_0
$0365	$0870			MOVF	STACK_0, 0
$0366	$0572			ANDWF	STACK_2, 0
$0367	$00F3			MOVWF	STACK_3
$0368	$3000			MOVLW	0
$0369	$1B07			BTFSC	PORTC, 6
$036A	$3001			MOVLW	1
$036B	$00F1			MOVWF	STACK_1
$036C	$0871			MOVF	STACK_1, 0
$036D	$3A00			XORLW	0
$036E	$3001			MOVLW	1
$036F	$1D03			BTFSS	STATUS, Z
$0370	$3000			MOVLW	0
$0371	$00F2			MOVWF	STACK_2
$0372	$3000			MOVLW	0
$0373	$1A07			BTFSC	PORTC, 4
$0374	$3001			MOVLW	1
$0375	$00F1			MOVWF	STACK_1
$0376	$0871			MOVF	STACK_1, 0
$0377	$3A01			XORLW	1
$0378	$3001			MOVLW	1
$0379	$1D03			BTFSS	STATUS, Z
$037A	$3000			MOVLW	0
$037B	$00F0			MOVWF	STACK_0
$037C	$0870			MOVF	STACK_0, 0
$037D	$05F2			ANDWF	STACK_2, 1
$037E	$3000			MOVLW	0
$037F	$1987			BTFSC	PORTC, 3
$0380	$3001			MOVLW	1
$0381	$00F1			MOVWF	STACK_1
$0382	$0871			MOVF	STACK_1, 0
$0383	$3A01			XORLW	1
$0384	$3001			MOVLW	1
$0385	$1D03			BTFSS	STATUS, Z
$0386	$3000			MOVLW	0
$0387	$00F0			MOVWF	STACK_0
$0388	$0872			MOVF	STACK_2, 0
$0389	$05F0			ANDWF	STACK_0, 1
$038A	$0870			MOVF	STACK_0, 0
$038B	$04F3			IORWF	STACK_3, 1
$038C	$3000			MOVLW	0
$038D	$1B07			BTFSC	PORTC, 6
$038E	$3001			MOVLW	1
$038F	$00F1			MOVWF	STACK_1
$0390	$0871			MOVF	STACK_1, 0
$0391	$3A01			XORLW	1
$0392	$3001			MOVLW	1
$0393	$1D03			BTFSS	STATUS, Z
$0394	$3000			MOVLW	0
$0395	$00F2			MOVWF	STACK_2
$0396	$3000			MOVLW	0
$0397	$1A07			BTFSC	PORTC, 4
$0398	$3001			MOVLW	1
$0399	$00F1			MOVWF	STACK_1
$039A	$0871			MOVF	STACK_1, 0
$039B	$3A01			XORLW	1
$039C	$3001			MOVLW	1
$039D	$1D03			BTFSS	STATUS, Z
$039E	$3000			MOVLW	0
$039F	$00F0			MOVWF	STACK_0
$03A0	$0870			MOVF	STACK_0, 0
$03A1	$05F2			ANDWF	STACK_2, 1
$03A2	$3000			MOVLW	0
$03A3	$1987			BTFSC	PORTC, 3
$03A4	$3001			MOVLW	1
$03A5	$00F1			MOVWF	STACK_1
$03A6	$0871			MOVF	STACK_1, 0
$03A7	$3A00			XORLW	0
$03A8	$3001			MOVLW	1
$03A9	$1D03			BTFSS	STATUS, Z
$03AA	$3000			MOVLW	0
$03AB	$00F0			MOVWF	STACK_0
$03AC	$0872			MOVF	STACK_2, 0
$03AD	$05F0			ANDWF	STACK_0, 1
$03AE	$0873			MOVF	STACK_3, 0
$03AF	$04F0			IORWF	STACK_0, 1
$03B0	$1903			BTFSC	STATUS, Z
$03B1	$2C80			GOTO	L_front_auto_7
;joy_servo.c,158 :: 		if(C6==1 & C4==0 & C3==1)
$03B2	$3000			MOVLW	0
$03B3	$1B07			BTFSC	PORTC, 6
$03B4	$3001			MOVLW	1
$03B5	$00F1			MOVWF	STACK_1
$03B6	$0871			MOVF	STACK_1, 0
$03B7	$3A01			XORLW	1
$03B8	$3001			MOVLW	1
$03B9	$1D03			BTFSS	STATUS, Z
$03BA	$3000			MOVLW	0
$03BB	$00F2			MOVWF	STACK_2
$03BC	$3000			MOVLW	0
$03BD	$1A07			BTFSC	PORTC, 4
$03BE	$3001			MOVLW	1
$03BF	$00F1			MOVWF	STACK_1
$03C0	$0871			MOVF	STACK_1, 0
$03C1	$3A00			XORLW	0
$03C2	$3001			MOVLW	1
$03C3	$1D03			BTFSS	STATUS, Z
$03C4	$3000			MOVLW	0
$03C5	$00F0			MOVWF	STACK_0
$03C6	$0870			MOVF	STACK_0, 0
$03C7	$05F2			ANDWF	STACK_2, 1
$03C8	$3000			MOVLW	0
$03C9	$1987			BTFSC	PORTC, 3
$03CA	$3001			MOVLW	1
$03CB	$00F1			MOVWF	STACK_1
$03CC	$0871			MOVF	STACK_1, 0
$03CD	$3A01			XORLW	1
$03CE	$3001			MOVLW	1
$03CF	$1D03			BTFSS	STATUS, Z
$03D0	$3000			MOVLW	0
$03D1	$00F0			MOVWF	STACK_0
$03D2	$0872			MOVF	STACK_2, 0
$03D3	$05F0			ANDWF	STACK_0, 1
$03D4	$1903			BTFSC	STATUS, Z
$03D5	$2BF8			GOTO	L_front_auto_8
;joy_servo.c,160 :: 		front(); Delay_ms(200);
$03D6	$158A			BSF	PCLATH, 3
$03D7	$2000			CALL	_front
$03D8	$118A			BCF	PCLATH, 3
$03D9	$3003			MOVLW	3
$03DA	$00FC			MOVWF	STACK_12
$03DB	$30FF			MOVLW	255
$03DC	$00FB			MOVWF	STACK_11
$03DD	$30FF			MOVLW	255
$03DE	$00FA			MOVWF	STACK_10
$03DF	$0BFC			DECFSZ	STACK_12, F
$03E0	$2BE2			GOTO	$+2
$03E1	$2BE9			GOTO	$+8
$03E2	$0BFB			DECFSZ	STACK_11, F
$03E3	$2BE5			GOTO	$+2
$03E4	$2BE8			GOTO	$+4
$03E5	$0BFA			DECFSZ	STACK_10, F
$03E6	$2BE5			GOTO	$-1
$03E7	$2BE2			GOTO	$-5
$03E8	$2BDF			GOTO	$-9
$03E9	$300B			MOVLW	11
$03EA	$00FB			MOVWF	STACK_11
$03EB	$30FF			MOVLW	255
$03EC	$00FA			MOVWF	STACK_10
$03ED	$0BFB			DECFSZ	STACK_11, F
$03EE	$2BF0			GOTO	$+2
$03EF	$2BF3			GOTO	$+4
$03F0	$0BFA			DECFSZ	STACK_10, F
$03F1	$2BF0			GOTO	$-1
$03F2	$2BED			GOTO	$-5
$03F3	$3018			MOVLW	24
$03F4	$00FA			MOVWF	STACK_10
$03F5	$0BFA			DECFSZ	STACK_10, F
$03F6	$2BF5			GOTO	$-1
;joy_servo.c,161 :: 		}
$03F7	$2C7F			GOTO	L_front_auto_9
$03F8	$	L_front_auto_8:
;joy_servo.c,162 :: 		else if(C6==0 & C4==1 & C3==1)
$03F8	$3000			MOVLW	0
$03F9	$1B07			BTFSC	PORTC, 6
$03FA	$3001			MOVLW	1
$03FB	$00F1			MOVWF	STACK_1
$03FC	$0871			MOVF	STACK_1, 0
$03FD	$3A00			XORLW	0
$03FE	$3001			MOVLW	1
$03FF	$1D03			BTFSS	STATUS, Z
$0400	$3000			MOVLW	0
$0401	$00F2			MOVWF	STACK_2
$0402	$3000			MOVLW	0
$0403	$1A07			BTFSC	PORTC, 4
$0404	$3001			MOVLW	1
$0405	$00F1			MOVWF	STACK_1
$0406	$0871			MOVF	STACK_1, 0
$0407	$3A01			XORLW	1
$0408	$3001			MOVLW	1
$0409	$1D03			BTFSS	STATUS, Z
$040A	$3000			MOVLW	0
$040B	$00F0			MOVWF	STACK_0
$040C	$0870			MOVF	STACK_0, 0
$040D	$05F2			ANDWF	STACK_2, 1
$040E	$3000			MOVLW	0
$040F	$1987			BTFSC	PORTC, 3
$0410	$3001			MOVLW	1
$0411	$00F1			MOVWF	STACK_1
$0412	$0871			MOVF	STACK_1, 0
$0413	$3A01			XORLW	1
$0414	$3001			MOVLW	1
$0415	$1D03			BTFSS	STATUS, Z
$0416	$3000			MOVLW	0
$0417	$00F0			MOVWF	STACK_0
$0418	$0872			MOVF	STACK_2, 0
$0419	$05F0			ANDWF	STACK_0, 1
$041A	$1903			BTFSC	STATUS, Z
$041B	$2C3C			GOTO	L_front_auto_10
;joy_servo.c,164 :: 		turn_around_left(); Delay_ms(200);
$041C	$26E8			CALL	_turn_around_left
$041D	$3003			MOVLW	3
$041E	$00FC			MOVWF	STACK_12
$041F	$30FF			MOVLW	255
$0420	$00FB			MOVWF	STACK_11
$0421	$30FF			MOVLW	255
$0422	$00FA			MOVWF	STACK_10
$0423	$0BFC			DECFSZ	STACK_12, F
$0424	$2C26			GOTO	$+2
$0425	$2C2D			GOTO	$+8
$0426	$0BFB			DECFSZ	STACK_11, F
$0427	$2C29			GOTO	$+2
$0428	$2C2C			GOTO	$+4
$0429	$0BFA			DECFSZ	STACK_10, F
$042A	$2C29			GOTO	$-1
$042B	$2C26			GOTO	$-5
$042C	$2C23			GOTO	$-9
$042D	$300B			MOVLW	11
$042E	$00FB			MOVWF	STACK_11
$042F	$30FF			MOVLW	255
$0430	$00FA			MOVWF	STACK_10
$0431	$0BFB			DECFSZ	STACK_11, F
$0432	$2C34			GOTO	$+2
$0433	$2C37			GOTO	$+4
$0434	$0BFA			DECFSZ	STACK_10, F
$0435	$2C34			GOTO	$-1
$0436	$2C31			GOTO	$-5
$0437	$3018			MOVLW	24
$0438	$00FA			MOVWF	STACK_10
$0439	$0BFA			DECFSZ	STACK_10, F
$043A	$2C39			GOTO	$-1
;joy_servo.c,165 :: 		}
$043B	$2C7F			GOTO	L_front_auto_11
$043C	$	L_front_auto_10:
;joy_servo.c,166 :: 		else if(C6==1 & C4==1 & C3==0)
$043C	$3000			MOVLW	0
$043D	$1B07			BTFSC	PORTC, 6
$043E	$3001			MOVLW	1
$043F	$00F1			MOVWF	STACK_1
$0440	$0871			MOVF	STACK_1, 0
$0441	$3A01			XORLW	1
$0442	$3001			MOVLW	1
$0443	$1D03			BTFSS	STATUS, Z
$0444	$3000			MOVLW	0
$0445	$00F2			MOVWF	STACK_2
$0446	$3000			MOVLW	0
$0447	$1A07			BTFSC	PORTC, 4
$0448	$3001			MOVLW	1
$0449	$00F1			MOVWF	STACK_1
$044A	$0871			MOVF	STACK_1, 0
$044B	$3A01			XORLW	1
$044C	$3001			MOVLW	1
$044D	$1D03			BTFSS	STATUS, Z
$044E	$3000			MOVLW	0
$044F	$00F0			MOVWF	STACK_0
$0450	$0870			MOVF	STACK_0, 0
$0451	$05F2			ANDWF	STACK_2, 1
$0452	$3000			MOVLW	0
$0453	$1987			BTFSC	PORTC, 3
$0454	$3001			MOVLW	1
$0455	$00F1			MOVWF	STACK_1
$0456	$0871			MOVF	STACK_1, 0
$0457	$3A00			XORLW	0
$0458	$3001			MOVLW	1
$0459	$1D03			BTFSS	STATUS, Z
$045A	$3000			MOVLW	0
$045B	$00F0			MOVWF	STACK_0
$045C	$0872			MOVF	STACK_2, 0
$045D	$05F0			ANDWF	STACK_0, 1
$045E	$1903			BTFSC	STATUS, Z
$045F	$2C7F			GOTO	L_front_auto_12
;joy_servo.c,168 :: 		turn_around_right(); Delay_ms(200);
$0460	$26D0			CALL	_turn_around_right
$0461	$3003			MOVLW	3
$0462	$00FC			MOVWF	STACK_12
$0463	$30FF			MOVLW	255
$0464	$00FB			MOVWF	STACK_11
$0465	$30FF			MOVLW	255
$0466	$00FA			MOVWF	STACK_10
$0467	$0BFC			DECFSZ	STACK_12, F
$0468	$2C6A			GOTO	$+2
$0469	$2C71			GOTO	$+8
$046A	$0BFB			DECFSZ	STACK_11, F
$046B	$2C6D			GOTO	$+2
$046C	$2C70			GOTO	$+4
$046D	$0BFA			DECFSZ	STACK_10, F
$046E	$2C6D			GOTO	$-1
$046F	$2C6A			GOTO	$-5
$0470	$2C67			GOTO	$-9
$0471	$300B			MOVLW	11
$0472	$00FB			MOVWF	STACK_11
$0473	$30FF			MOVLW	255
$0474	$00FA			MOVWF	STACK_10
$0475	$0BFB			DECFSZ	STACK_11, F
$0476	$2C78			GOTO	$+2
$0477	$2C7B			GOTO	$+4
$0478	$0BFA			DECFSZ	STACK_10, F
$0479	$2C78			GOTO	$-1
$047A	$2C75			GOTO	$-5
$047B	$3018			MOVLW	24
$047C	$00FA			MOVWF	STACK_10
$047D	$0BFA			DECFSZ	STACK_10, F
$047E	$2C7D			GOTO	$-1
;joy_servo.c,169 :: 		}
$047F	$	L_front_auto_12:
$047F	$	L_front_auto_11:
$047F	$	L_front_auto_9:
;joy_servo.c,170 :: 		}
$047F	$2B43			GOTO	L_front_auto_6
$0480	$	L_front_auto_7:
;joy_servo.c,171 :: 		}
$0480	$0008			RETURN
$0693	$	_turn_right_auto:
;joy_servo.c,172 :: 		void turn_right_auto()
;joy_servo.c,174 :: 		turn_around_right(); Delay_ms(2000);
$0693	$26D0			CALL	_turn_around_right
$0694	$3015			MOVLW	21
$0695	$00FC			MOVWF	STACK_12
$0696	$30FF			MOVLW	255
$0697	$00FB			MOVWF	STACK_11
$0698	$30FF			MOVLW	255
$0699	$00FA			MOVWF	STACK_10
$069A	$0BFC			DECFSZ	STACK_12, F
$069B	$2E9D			GOTO	$+2
$069C	$2EA4			GOTO	$+8
$069D	$0BFB			DECFSZ	STACK_11, F
$069E	$2EA0			GOTO	$+2
$069F	$2EA3			GOTO	$+4
$06A0	$0BFA			DECFSZ	STACK_10, F
$06A1	$2EA0			GOTO	$-1
$06A2	$2E9D			GOTO	$-5
$06A3	$2E9A			GOTO	$-9
$06A4	$3066			MOVLW	102
$06A5	$00FB			MOVWF	STACK_11
$06A6	$30FF			MOVLW	255
$06A7	$00FA			MOVWF	STACK_10
$06A8	$0BFB			DECFSZ	STACK_11, F
$06A9	$2EAB			GOTO	$+2
$06AA	$2EAE			GOTO	$+4
$06AB	$0BFA			DECFSZ	STACK_10, F
$06AC	$2EAB			GOTO	$-1
$06AD	$2EA8			GOTO	$-5
$06AE	$3012			MOVLW	18
$06AF	$00FA			MOVWF	STACK_10
$06B0	$0BFA			DECFSZ	STACK_10, F
$06B1	$2EB0			GOTO	$-1
$06B2	$0000			NOP
$06B3	$0000			NOP
;joy_servo.c,175 :: 		}
$06B4	$0008			RETURN
$0883	$	_crip_in_auto:
;joy_servo.c,184 :: 		void crip_in_auto()
;joy_servo.c,186 :: 		for(i=0;i<=20;i++) crip_in();
$0883	$1303			BCF	STATUS, RP1
$0884	$1283			BCF	STATUS, RP0
$0885	$01A2			CLRF	_i, 1
$0886	$	L_crip_in_auto_16:
$0886	$0822			MOVF	_i, 0
$0887	$3C14			SUBLW	20
$0888	$1C03			BTFSS	STATUS, C
$0889	$288F			GOTO	L_crip_in_auto_17
$088A	$118A			BCF	PCLATH, 3
$088B	$25E5			CALL	_crip_in
$088C	$158A			BSF	PCLATH, 3
$088D	$	L_crip_in_auto_18:
$088D	$0AA2			INCF	_i, 1
$088E	$2886			GOTO	L_crip_in_auto_16
$088F	$	L_crip_in_auto_17:
;joy_servo.c,187 :: 		}
$088F	$0008			RETURN
$0671	$	_turn_left_auto:
;joy_servo.c,176 :: 		void turn_left_auto()
;joy_servo.c,178 :: 		turn_around_left(); Delay_ms(2000);
$0671	$26E8			CALL	_turn_around_left
$0672	$3015			MOVLW	21
$0673	$00FC			MOVWF	STACK_12
$0674	$30FF			MOVLW	255
$0675	$00FB			MOVWF	STACK_11
$0676	$30FF			MOVLW	255
$0677	$00FA			MOVWF	STACK_10
$0678	$0BFC			DECFSZ	STACK_12, F
$0679	$2E7B			GOTO	$+2
$067A	$2E82			GOTO	$+8
$067B	$0BFB			DECFSZ	STACK_11, F
$067C	$2E7E			GOTO	$+2
$067D	$2E81			GOTO	$+4
$067E	$0BFA			DECFSZ	STACK_10, F
$067F	$2E7E			GOTO	$-1
$0680	$2E7B			GOTO	$-5
$0681	$2E78			GOTO	$-9
$0682	$3066			MOVLW	102
$0683	$00FB			MOVWF	STACK_11
$0684	$30FF			MOVLW	255
$0685	$00FA			MOVWF	STACK_10
$0686	$0BFB			DECFSZ	STACK_11, F
$0687	$2E89			GOTO	$+2
$0688	$2E8C			GOTO	$+4
$0689	$0BFA			DECFSZ	STACK_10, F
$068A	$2E89			GOTO	$-1
$068B	$2E86			GOTO	$-5
$068C	$3012			MOVLW	18
$068D	$00FA			MOVWF	STACK_10
$068E	$0BFA			DECFSZ	STACK_10, F
$068F	$2E8E			GOTO	$-1
$0690	$0000			NOP
$0691	$0000			NOP
;joy_servo.c,179 :: 		}
$0692	$0008			RETURN
$0890	$	_crip_out_auto:
;joy_servo.c,180 :: 		void crip_out_auto()
;joy_servo.c,182 :: 		for(i=0;i<=20;i++) crip_out();
$0890	$1303			BCF	STATUS, RP1
$0891	$1283			BCF	STATUS, RP0
$0892	$01A2			CLRF	_i, 1
$0893	$	L_crip_out_auto_13:
$0893	$0822			MOVF	_i, 0
$0894	$3C14			SUBLW	20
$0895	$1C03			BTFSS	STATUS, C
$0896	$289C			GOTO	L_crip_out_auto_14
$0897	$118A			BCF	PCLATH, 3
$0898	$2618			CALL	_crip_out
$0899	$158A			BSF	PCLATH, 3
$089A	$	L_crip_out_auto_15:
$089A	$0AA2			INCF	_i, 1
$089B	$2893			GOTO	L_crip_out_auto_13
$089C	$	L_crip_out_auto_14:
;joy_servo.c,183 :: 		}
$089C	$0008			RETURN
$0004	$	_main:
;joy_servo.c,189 :: 		void main()
;joy_servo.c,192 :: 		ANSEL=0x00;                                       // Set PORTA to digital I/O
$0004	$1703			BSF	STATUS, RP1
$0005	$1683			BSF	STATUS, RP0
$0006	$0188			CLRF	ANSEL, 1
;joy_servo.c,193 :: 		TRISA=0b00000100;
$0007	$3004			MOVLW	4
$0008	$1303			BCF	STATUS, RP1
$0009	$0085			MOVWF	TRISA
;joy_servo.c,194 :: 		TRISC.F5=0;                                       // SET RC5 to OUTPUT   (servo)
$000A	$1287			BCF	TRISC, 5
;joy_servo.c,195 :: 		ANSELH.F4=0;
$000B	$1703			BSF	STATUS, RP1
$000C	$1209			BCF	ANSELH, 4
;joy_servo.c,196 :: 		TRISB.F3=0;
$000D	$1303			BCF	STATUS, RP1
$000E	$1186			BCF	TRISB, 3
;joy_servo.c,197 :: 		TRISC.F3=1;                                       // Set reflex input F3
$000F	$1587			BSF	TRISC, 3
;joy_servo.c,198 :: 		TRISC.F4=1;                                       // Set reflex input F4
$0010	$1607			BSF	TRISC, 4
;joy_servo.c,199 :: 		TRISC.F6=1;                                       // Set reflex input F6
$0011	$1707			BSF	TRISC, 6
;joy_servo.c,200 :: 		Lcd_Init(&PORTD);                                 // Initial LCD
$0012	$3008			MOVLW	PORTD
$0013	$1283			BCF	STATUS, RP0
$0014	$00A9			MOVWF	FARG_Lcd_Init+0
$0015	$2481			CALL	_Lcd_Init
;joy_servo.c,201 :: 		Lcd_Cmd(LCD_CURSOR_OFF);
$0016	$300C			MOVLW	12
$0017	$00A9			MOVWF	FARG_Lcd_Cmd+0
$0018	$24E3			CALL	_Lcd_Cmd
;joy_servo.c,202 :: 		CLK=0;
$0019	$1005			BCF	PORTA, 0
;joy_servo.c,203 :: 		CS=1;
$001A	$1585			BSF	PORTA, 3
;joy_servo.c,204 :: 		DOUT=0;
$001B	$1085			BCF	PORTA, 1
;joy_servo.c,205 :: 		Delay_ms(500);
$001C	$3006			MOVLW	6
$001D	$00FC			MOVWF	STACK_12
$001E	$30FF			MOVLW	255
$001F	$00FB			MOVWF	STACK_11
$0020	$30FF			MOVLW	255
$0021	$00FA			MOVWF	STACK_10
$0022	$0BFC			DECFSZ	STACK_12, F
$0023	$2825			GOTO	$+2
$0024	$282C			GOTO	$+8
$0025	$0BFB			DECFSZ	STACK_11, F
$0026	$2828			GOTO	$+2
$0027	$282B			GOTO	$+4
$0028	$0BFA			DECFSZ	STACK_10, F
$0029	$2828			GOTO	$-1
$002A	$2825			GOTO	$-5
$002B	$2822			GOTO	$-9
$002C	$301A			MOVLW	26
$002D	$00FB			MOVWF	STACK_11
$002E	$30FF			MOVLW	255
$002F	$00FA			MOVWF	STACK_10
$0030	$0BFB			DECFSZ	STACK_11, F
$0031	$2833			GOTO	$+2
$0032	$2836			GOTO	$+4
$0033	$0BFA			DECFSZ	STACK_10, F
$0034	$2833			GOTO	$-1
$0035	$2830			GOTO	$-5
$0036	$3042			MOVLW	66
$0037	$00FA			MOVWF	STACK_10
$0038	$0BFA			DECFSZ	STACK_10, F
$0039	$2838			GOTO	$-1
;joy_servo.c,207 :: 		while(1)
$003A	$	L_main_19:
;joy_servo.c,209 :: 		PORTB.F3=0;
$003A	$1186			BCF	PORTB, 3
;joy_servo.c,210 :: 		CS=0;
$003B	$1185			BCF	PORTA, 3
;joy_servo.c,211 :: 		PSX_IN=PSX_TxRx(0x01);                        // Send Start Command
$003C	$3001			MOVLW	1
$003D	$00A9			MOVWF	FARG_PSX_TxRx+0
$003E	$2649			CALL	_PSX_TxRx
$003F	$0870			MOVF	STACK_0, 0
$0040	$00A3			MOVWF	_PSX_IN
;joy_servo.c,212 :: 		PSX_ID=PSX_TxRx(0x42);                        // Send Command Read Switch and Read ID
$0041	$3042			MOVLW	66
$0042	$00A9			MOVWF	FARG_PSX_TxRx+0
$0043	$2649			CALL	_PSX_TxRx
$0044	$0870			MOVF	STACK_0, 0
$0045	$00A4			MOVWF	_PSX_ID
;joy_servo.c,213 :: 		PSX_STATUS=PSX_TxRx(0x00);                    // Read STATUS (0x5A)
$0046	$01A9			CLRF	FARG_PSX_TxRx+0, 1
$0047	$2649			CALL	_PSX_TxRx
$0048	$0870			MOVF	STACK_0, 0
$0049	$00A5			MOVWF	_PSX_STATUS
;joy_servo.c,214 :: 		PSX_LEFT=PSX_TxRx(0x00);                      // Read Byte 0
$004A	$01A9			CLRF	FARG_PSX_TxRx+0, 1
$004B	$2649			CALL	_PSX_TxRx
$004C	$0870			MOVF	STACK_0, 0
$004D	$00A6			MOVWF	_PSX_Left
;joy_servo.c,215 :: 		PSX_RIGHT=PSX_TxRx(0x00);                     // Read Byte 1
$004E	$01A9			CLRF	FARG_PSX_TxRx+0, 1
$004F	$2649			CALL	_PSX_TxRx
$0050	$0870			MOVF	STACK_0, 0
$0051	$00A7			MOVWF	_PSX_RIGHT
;joy_servo.c,216 :: 		CS=1;
$0052	$1585			BSF	PORTA, 3
;joy_servo.c,219 :: 		if(PSX_LEFT==222)   // ^ button
$0053	$0826			MOVF	_PSX_Left, 0
$0054	$3ADE			XORLW	222
$0055	$1D03			BTFSS	STATUS, Z
$0056	$285A			GOTO	L_main_21
;joy_servo.c,221 :: 		front();
$0057	$158A			BSF	PCLATH, 3
$0058	$2000			CALL	_front
$0059	$118A			BCF	PCLATH, 3
;joy_servo.c,222 :: 		}
$005A	$	L_main_21:
;joy_servo.c,224 :: 		if(PSX_LEFT==126)   // V button
$005A	$0826			MOVF	_PSX_Left, 0
$005B	$3A7E			XORLW	126
$005C	$1D03			BTFSS	STATUS, Z
$005D	$2861			GOTO	L_main_22
;joy_servo.c,226 :: 		back();
$005E	$158A			BSF	PCLATH, 3
$005F	$2038			CALL	_back
$0060	$118A			BCF	PCLATH, 3
;joy_servo.c,227 :: 		}
$0061	$	L_main_22:
;joy_servo.c,229 :: 		if(PSX_LEFT==254)
$0061	$0826			MOVF	_PSX_Left, 0
$0062	$3AFE			XORLW	254
$0063	$1D03			BTFSS	STATUS, Z
$0064	$2868			GOTO	L_main_23
;joy_servo.c,231 :: 		stop();
$0065	$158A			BSF	PCLATH, 3
$0066	$2063			CALL	_stop
$0067	$118A			BCF	PCLATH, 3
;joy_servo.c,232 :: 		}
$0068	$	L_main_23:
;joy_servo.c,234 :: 		if(PSX_LEFT==190)   // > button
$0068	$0826			MOVF	_PSX_Left, 0
$0069	$3ABE			XORLW	190
$006A	$1D03			BTFSS	STATUS, Z
$006B	$286D			GOTO	L_main_24
;joy_servo.c,236 :: 		turn_around_right();
$006C	$26D0			CALL	_turn_around_right
;joy_servo.c,237 :: 		}
$006D	$	L_main_24:
;joy_servo.c,239 :: 		if(PSX_RIGHT==254)   // < button
$006D	$0827			MOVF	_PSX_RIGHT, 0
$006E	$3AFE			XORLW	254
$006F	$1D03			BTFSS	STATUS, Z
$0070	$2872			GOTO	L_main_25
;joy_servo.c,241 :: 		turn_around_left();
$0071	$26E8			CALL	_turn_around_left
;joy_servo.c,242 :: 		}
$0072	$	L_main_25:
;joy_servo.c,244 :: 		if(PSX_RIGHT==239)   // R1 button
$0072	$0827			MOVF	_PSX_RIGHT, 0
$0073	$3AEF			XORLW	239
$0074	$1D03			BTFSS	STATUS, Z
$0075	$2879			GOTO	L_main_26
;joy_servo.c,246 :: 		turn_left();
$0076	$158A			BSF	PCLATH, 3
$0077	$201C			CALL	_turn_left
$0078	$118A			BCF	PCLATH, 3
;joy_servo.c,247 :: 		}
$0079	$	L_main_26:
;joy_servo.c,249 :: 		if(PSX_RIGHT==247)   // L1 button
$0079	$0827			MOVF	_PSX_RIGHT, 0
$007A	$3AF7			XORLW	247
$007B	$1D03			BTFSS	STATUS, Z
$007C	$287E			GOTO	L_main_27
;joy_servo.c,251 :: 		turn_right();
$007D	$2700			CALL	_turn_right
;joy_servo.c,252 :: 		}
$007E	$	L_main_27:
;joy_servo.c,253 :: 		if(PSX_RIGHT==191)  // O button  control servo
$007E	$0827			MOVF	_PSX_RIGHT, 0
$007F	$3ABF			XORLW	191
$0080	$1D03			BTFSS	STATUS, Z
$0081	$2883			GOTO	L_main_28
;joy_servo.c,255 :: 		crip_out();
$0082	$2618			CALL	_crip_out
;joy_servo.c,256 :: 		}
$0083	$	L_main_28:
;joy_servo.c,257 :: 		if(PSX_RIGHT==127)  // X button  control servo
$0083	$0827			MOVF	_PSX_RIGHT, 0
$0084	$3A7F			XORLW	127
$0085	$1D03			BTFSS	STATUS, Z
$0086	$2888			GOTO	L_main_29
;joy_servo.c,259 :: 		crip_in();
$0087	$25E5			CALL	_crip_in
;joy_servo.c,260 :: 		}
$0088	$	L_main_29:
;joy_servo.c,261 :: 		if(PSX_LEFT==238) // start button
$0088	$0826			MOVF	_PSX_Left, 0
$0089	$3AEE			XORLW	238
$008A	$1D03			BTFSS	STATUS, Z
$008B	$288D			GOTO	L_main_30
;joy_servo.c,263 :: 		start_pwm();
$008C	$26B5			CALL	_start_pwm
;joy_servo.c,264 :: 		}
$008D	$	L_main_30:
;joy_servo.c,265 :: 		if(PSX_LEFT==252) // select button
$008D	$0826			MOVF	_PSX_Left, 0
$008E	$3AFC			XORLW	252
$008F	$1D03			BTFSS	STATUS, Z
$0090	$2894			GOTO	L_main_31
;joy_servo.c,267 :: 		stop_pwm();
$0091	$158A			BSF	PCLATH, 3
$0092	$2054			CALL	_stop_pwm
$0093	$118A			BCF	PCLATH, 3
;joy_servo.c,268 :: 		}
$0094	$	L_main_31:
;joy_servo.c,271 :: 		if(PORTB.F0==0)
$0094	$3001			MOVLW	1
$0095	$0506			ANDWF	PORTB, 0
$0096	$00F1			MOVWF	STACK_1
$0097	$0871			MOVF	STACK_1, 0
$0098	$3A00			XORLW	0
$0099	$1D03			BTFSS	STATUS, Z
$009A	$2B41			GOTO	L_main_32
;joy_servo.c,273 :: 		b=1;
$009B	$3001			MOVLW	1
$009C	$00A8			MOVWF	_b
;joy_servo.c,275 :: 		front(); Delay_ms(2000);
$009D	$158A			BSF	PCLATH, 3
$009E	$2000			CALL	_front
$009F	$118A			BCF	PCLATH, 3
$00A0	$3015			MOVLW	21
$00A1	$00FC			MOVWF	STACK_12
$00A2	$30FF			MOVLW	255
$00A3	$00FB			MOVWF	STACK_11
$00A4	$30FF			MOVLW	255
$00A5	$00FA			MOVWF	STACK_10
$00A6	$0BFC			DECFSZ	STACK_12, F
$00A7	$28A9			GOTO	$+2
$00A8	$28B0			GOTO	$+8
$00A9	$0BFB			DECFSZ	STACK_11, F
$00AA	$28AC			GOTO	$+2
$00AB	$28AF			GOTO	$+4
$00AC	$0BFA			DECFSZ	STACK_10, F
$00AD	$28AC			GOTO	$-1
$00AE	$28A9			GOTO	$-5
$00AF	$28A6			GOTO	$-9
$00B0	$3066			MOVLW	102
$00B1	$00FB			MOVWF	STACK_11
$00B2	$30FF			MOVLW	255
$00B3	$00FA			MOVWF	STACK_10
$00B4	$0BFB			DECFSZ	STACK_11, F
$00B5	$28B7			GOTO	$+2
$00B6	$28BA			GOTO	$+4
$00B7	$0BFA			DECFSZ	STACK_10, F
$00B8	$28B7			GOTO	$-1
$00B9	$28B4			GOTO	$-5
$00BA	$3012			MOVLW	18
$00BB	$00FA			MOVWF	STACK_10
$00BC	$0BFA			DECFSZ	STACK_10, F
$00BD	$28BC			GOTO	$-1
$00BE	$0000			NOP
$00BF	$0000			NOP
;joy_servo.c,276 :: 		while(1)
$00C0	$	L_main_33:
;joy_servo.c,278 :: 		if(b==1)
$00C0	$0828			MOVF	_b, 0
$00C1	$3A01			XORLW	1
$00C2	$1D03			BTFSS	STATUS, Z
$00C3	$2B3D			GOTO	L_main_35
;joy_servo.c,280 :: 		front_auto();
$00C4	$2343			CALL	_front_auto
;joy_servo.c,281 :: 		if(C6==1 & C4==0 & C3==0)
$00C5	$3000			MOVLW	0
$00C6	$1B07			BTFSC	PORTC, 6
$00C7	$3001			MOVLW	1
$00C8	$00F1			MOVWF	STACK_1
$00C9	$0871			MOVF	STACK_1, 0
$00CA	$3A01			XORLW	1
$00CB	$3001			MOVLW	1
$00CC	$1D03			BTFSS	STATUS, Z
$00CD	$3000			MOVLW	0
$00CE	$00F2			MOVWF	STACK_2
$00CF	$3000			MOVLW	0
$00D0	$1A07			BTFSC	PORTC, 4
$00D1	$3001			MOVLW	1
$00D2	$00F1			MOVWF	STACK_1
$00D3	$0871			MOVF	STACK_1, 0
$00D4	$3A00			XORLW	0
$00D5	$3001			MOVLW	1
$00D6	$1D03			BTFSS	STATUS, Z
$00D7	$3000			MOVLW	0
$00D8	$00F0			MOVWF	STACK_0
$00D9	$0870			MOVF	STACK_0, 0
$00DA	$05F2			ANDWF	STACK_2, 1
$00DB	$3000			MOVLW	0
$00DC	$1987			BTFSC	PORTC, 3
$00DD	$3001			MOVLW	1
$00DE	$00F1			MOVWF	STACK_1
$00DF	$0871			MOVF	STACK_1, 0
$00E0	$3A00			XORLW	0
$00E1	$3001			MOVLW	1
$00E2	$1D03			BTFSS	STATUS, Z
$00E3	$3000			MOVLW	0
$00E4	$00F0			MOVWF	STACK_0
$00E5	$0872			MOVF	STACK_2, 0
$00E6	$05F0			ANDWF	STACK_0, 1
$00E7	$1903			BTFSC	STATUS, Z
$00E8	$290B			GOTO	L_main_36
;joy_servo.c,283 :: 		front(); Delay_ms(1100); turn_right_auto();
$00E9	$158A			BSF	PCLATH, 3
$00EA	$2000			CALL	_front
$00EB	$118A			BCF	PCLATH, 3
$00EC	$300C			MOVLW	12
$00ED	$00FC			MOVWF	STACK_12
$00EE	$30FF			MOVLW	255
$00EF	$00FB			MOVWF	STACK_11
$00F0	$30FF			MOVLW	255
$00F1	$00FA			MOVWF	STACK_10
$00F2	$0BFC			DECFSZ	STACK_12, F
$00F3	$28F5			GOTO	$+2
$00F4	$28FC			GOTO	$+8
$00F5	$0BFB			DECFSZ	STACK_11, F
$00F6	$28F8			GOTO	$+2
$00F7	$28FB			GOTO	$+4
$00F8	$0BFA			DECFSZ	STACK_10, F
$00F9	$28F8			GOTO	$-1
$00FA	$28F5			GOTO	$-5
$00FB	$28F2			GOTO	$-9
$00FC	$3038			MOVLW	56
$00FD	$00FB			MOVWF	STACK_11
$00FE	$30FF			MOVLW	255
$00FF	$00FA			MOVWF	STACK_10
$0100	$0BFB			DECFSZ	STACK_11, F
$0101	$2903			GOTO	$+2
$0102	$2906			GOTO	$+4
$0103	$0BFA			DECFSZ	STACK_10, F
$0104	$2903			GOTO	$-1
$0105	$2900			GOTO	$-5
$0106	$3096			MOVLW	150
$0107	$00FA			MOVWF	STACK_10
$0108	$0BFA			DECFSZ	STACK_10, F
$0109	$2908			GOTO	$-1
$010A	$2693			CALL	_turn_right_auto
;joy_servo.c,284 :: 		}
$010B	$	L_main_36:
;joy_servo.c,285 :: 		front_auto();
$010B	$2343			CALL	_front_auto
;joy_servo.c,286 :: 		if(C6==1 & C4==0 & C3==0)
$010C	$3000			MOVLW	0
$010D	$1B07			BTFSC	PORTC, 6
$010E	$3001			MOVLW	1
$010F	$00F1			MOVWF	STACK_1
$0110	$0871			MOVF	STACK_1, 0
$0111	$3A01			XORLW	1
$0112	$3001			MOVLW	1
$0113	$1D03			BTFSS	STATUS, Z
$0114	$3000			MOVLW	0
$0115	$00F2			MOVWF	STACK_2
$0116	$3000			MOVLW	0
$0117	$1A07			BTFSC	PORTC, 4
$0118	$3001			MOVLW	1
$0119	$00F1			MOVWF	STACK_1
$011A	$0871			MOVF	STACK_1, 0
$011B	$3A00			XORLW	0
$011C	$3001			MOVLW	1
$011D	$1D03			BTFSS	STATUS, Z
$011E	$3000			MOVLW	0
$011F	$00F0			MOVWF	STACK_0
$0120	$0870			MOVF	STACK_0, 0
$0121	$05F2			ANDWF	STACK_2, 1
$0122	$3000			MOVLW	0
$0123	$1987			BTFSC	PORTC, 3
$0124	$3001			MOVLW	1
$0125	$00F1			MOVWF	STACK_1
$0126	$0871			MOVF	STACK_1, 0
$0127	$3A00			XORLW	0
$0128	$3001			MOVLW	1
$0129	$1D03			BTFSS	STATUS, Z
$012A	$3000			MOVLW	0
$012B	$00F0			MOVWF	STACK_0
$012C	$0872			MOVF	STACK_2, 0
$012D	$05F0			ANDWF	STACK_0, 1
$012E	$1903			BTFSC	STATUS, Z
$012F	$2952			GOTO	L_main_37
;joy_servo.c,288 :: 		front(); Delay_ms(1100); turn_right_auto();
$0130	$158A			BSF	PCLATH, 3
$0131	$2000			CALL	_front
$0132	$118A			BCF	PCLATH, 3
$0133	$300C			MOVLW	12
$0134	$00FC			MOVWF	STACK_12
$0135	$30FF			MOVLW	255
$0136	$00FB			MOVWF	STACK_11
$0137	$30FF			MOVLW	255
$0138	$00FA			MOVWF	STACK_10
$0139	$0BFC			DECFSZ	STACK_12, F
$013A	$293C			GOTO	$+2
$013B	$2943			GOTO	$+8
$013C	$0BFB			DECFSZ	STACK_11, F
$013D	$293F			GOTO	$+2
$013E	$2942			GOTO	$+4
$013F	$0BFA			DECFSZ	STACK_10, F
$0140	$293F			GOTO	$-1
$0141	$293C			GOTO	$-5
$0142	$2939			GOTO	$-9
$0143	$3038			MOVLW	56
$0144	$00FB			MOVWF	STACK_11
$0145	$30FF			MOVLW	255
$0146	$00FA			MOVWF	STACK_10
$0147	$0BFB			DECFSZ	STACK_11, F
$0148	$294A			GOTO	$+2
$0149	$294D			GOTO	$+4
$014A	$0BFA			DECFSZ	STACK_10, F
$014B	$294A			GOTO	$-1
$014C	$2947			GOTO	$-5
$014D	$3096			MOVLW	150
$014E	$00FA			MOVWF	STACK_10
$014F	$0BFA			DECFSZ	STACK_10, F
$0150	$294F			GOTO	$-1
$0151	$2693			CALL	_turn_right_auto
;joy_servo.c,289 :: 		}
$0152	$	L_main_37:
;joy_servo.c,290 :: 		front_auto();
$0152	$2343			CALL	_front_auto
;joy_servo.c,291 :: 		if(C6==0 & C4==0 & C3==0)
$0153	$3000			MOVLW	0
$0154	$1B07			BTFSC	PORTC, 6
$0155	$3001			MOVLW	1
$0156	$00F1			MOVWF	STACK_1
$0157	$0871			MOVF	STACK_1, 0
$0158	$3A00			XORLW	0
$0159	$3001			MOVLW	1
$015A	$1D03			BTFSS	STATUS, Z
$015B	$3000			MOVLW	0
$015C	$00F2			MOVWF	STACK_2
$015D	$3000			MOVLW	0
$015E	$1A07			BTFSC	PORTC, 4
$015F	$3001			MOVLW	1
$0160	$00F1			MOVWF	STACK_1
$0161	$0871			MOVF	STACK_1, 0
$0162	$3A00			XORLW	0
$0163	$3001			MOVLW	1
$0164	$1D03			BTFSS	STATUS, Z
$0165	$3000			MOVLW	0
$0166	$00F0			MOVWF	STACK_0
$0167	$0870			MOVF	STACK_0, 0
$0168	$05F2			ANDWF	STACK_2, 1
$0169	$3000			MOVLW	0
$016A	$1987			BTFSC	PORTC, 3
$016B	$3001			MOVLW	1
$016C	$00F1			MOVWF	STACK_1
$016D	$0871			MOVF	STACK_1, 0
$016E	$3A00			XORLW	0
$016F	$3001			MOVLW	1
$0170	$1D03			BTFSS	STATUS, Z
$0171	$3000			MOVLW	0
$0172	$00F0			MOVWF	STACK_0
$0173	$0872			MOVF	STACK_2, 0
$0174	$05F0			ANDWF	STACK_0, 1
$0175	$1903			BTFSC	STATUS, Z
$0176	$29DC			GOTO	L_main_38
;joy_servo.c,293 :: 		stop(); Delay_ms(500); crip_in_auto(); back(); Delay_ms(1000);
$0177	$158A			BSF	PCLATH, 3
$0178	$2063			CALL	_stop
$0179	$118A			BCF	PCLATH, 3
$017A	$3006			MOVLW	6
$017B	$00FC			MOVWF	STACK_12
$017C	$30FF			MOVLW	255
$017D	$00FB			MOVWF	STACK_11
$017E	$30FF			MOVLW	255
$017F	$00FA			MOVWF	STACK_10
$0180	$0BFC			DECFSZ	STACK_12, F
$0181	$2983			GOTO	$+2
$0182	$298A			GOTO	$+8
$0183	$0BFB			DECFSZ	STACK_11, F
$0184	$2986			GOTO	$+2
$0185	$2989			GOTO	$+4
$0186	$0BFA			DECFSZ	STACK_10, F
$0187	$2986			GOTO	$-1
$0188	$2983			GOTO	$-5
$0189	$2980			GOTO	$-9
$018A	$301A			MOVLW	26
$018B	$00FB			MOVWF	STACK_11
$018C	$30FF			MOVLW	255
$018D	$00FA			MOVWF	STACK_10
$018E	$0BFB			DECFSZ	STACK_11, F
$018F	$2991			GOTO	$+2
$0190	$2994			GOTO	$+4
$0191	$0BFA			DECFSZ	STACK_10, F
$0192	$2991			GOTO	$-1
$0193	$298E			GOTO	$-5
$0194	$3042			MOVLW	66
$0195	$00FA			MOVWF	STACK_10
$0196	$0BFA			DECFSZ	STACK_10, F
$0197	$2996			GOTO	$-1
$0198	$158A			BSF	PCLATH, 3
$0199	$2083			CALL	_crip_in_auto
$019A	$118A			BCF	PCLATH, 3
$019B	$158A			BSF	PCLATH, 3
$019C	$2038			CALL	_back
$019D	$118A			BCF	PCLATH, 3
$019E	$300B			MOVLW	11
$019F	$00FC			MOVWF	STACK_12
$01A0	$30FF			MOVLW	255
$01A1	$00FB			MOVWF	STACK_11
$01A2	$30FF			MOVLW	255
$01A3	$00FA			MOVWF	STACK_10
$01A4	$0BFC			DECFSZ	STACK_12, F
$01A5	$29A7			GOTO	$+2
$01A6	$29AE			GOTO	$+8
$01A7	$0BFB			DECFSZ	STACK_11, F
$01A8	$29AA			GOTO	$+2
$01A9	$29AD			GOTO	$+4
$01AA	$0BFA			DECFSZ	STACK_10, F
$01AB	$29AA			GOTO	$-1
$01AC	$29A7			GOTO	$-5
$01AD	$29A4			GOTO	$-9
$01AE	$3033			MOVLW	51
$01AF	$00FB			MOVWF	STACK_11
$01B0	$30FF			MOVLW	255
$01B1	$00FA			MOVWF	STACK_10
$01B2	$0BFB			DECFSZ	STACK_11, F
$01B3	$29B5			GOTO	$+2
$01B4	$29B8			GOTO	$+4
$01B5	$0BFA			DECFSZ	STACK_10, F
$01B6	$29B5			GOTO	$-1
$01B7	$29B2			GOTO	$-5
$01B8	$3088			MOVLW	136
$01B9	$00FA			MOVWF	STACK_10
$01BA	$0BFA			DECFSZ	STACK_10, F
$01BB	$29BA			GOTO	$-1
;joy_servo.c,294 :: 		turn_right_auto(); Delay_ms(4000);
$01BC	$2693			CALL	_turn_right_auto
$01BD	$3029			MOVLW	41
$01BE	$00FC			MOVWF	STACK_12
$01BF	$30FF			MOVLW	255
$01C0	$00FB			MOVWF	STACK_11
$01C1	$30FF			MOVLW	255
$01C2	$00FA			MOVWF	STACK_10
$01C3	$0BFC			DECFSZ	STACK_12, F
$01C4	$29C6			GOTO	$+2
$01C5	$29CD			GOTO	$+8
$01C6	$0BFB			DECFSZ	STACK_11, F
$01C7	$29C9			GOTO	$+2
$01C8	$29CC			GOTO	$+4
$01C9	$0BFA			DECFSZ	STACK_10, F
$01CA	$29C9			GOTO	$-1
$01CB	$29C6			GOTO	$-5
$01CC	$29C3			GOTO	$-9
$01CD	$30CB			MOVLW	203
$01CE	$00FB			MOVWF	STACK_11
$01CF	$30FF			MOVLW	255
$01D0	$00FA			MOVWF	STACK_10
$01D1	$0BFB			DECFSZ	STACK_11, F
$01D2	$29D4			GOTO	$+2
$01D3	$29D7			GOTO	$+4
$01D4	$0BFA			DECFSZ	STACK_10, F
$01D5	$29D4			GOTO	$-1
$01D6	$29D1			GOTO	$-5
$01D7	$3029			MOVLW	41
$01D8	$00FA			MOVWF	STACK_10
$01D9	$0BFA			DECFSZ	STACK_10, F
$01DA	$29D9			GOTO	$-1
$01DB	$0000			NOP
;joy_servo.c,295 :: 		}
$01DC	$	L_main_38:
;joy_servo.c,296 :: 		front_auto();
$01DC	$2343			CALL	_front_auto
;joy_servo.c,297 :: 		if(C6==0 & C4==0 & C3==0)
$01DD	$3000			MOVLW	0
$01DE	$1B07			BTFSC	PORTC, 6
$01DF	$3001			MOVLW	1
$01E0	$00F1			MOVWF	STACK_1
$01E1	$0871			MOVF	STACK_1, 0
$01E2	$3A00			XORLW	0
$01E3	$3001			MOVLW	1
$01E4	$1D03			BTFSS	STATUS, Z
$01E5	$3000			MOVLW	0
$01E6	$00F2			MOVWF	STACK_2
$01E7	$3000			MOVLW	0
$01E8	$1A07			BTFSC	PORTC, 4
$01E9	$3001			MOVLW	1
$01EA	$00F1			MOVWF	STACK_1
$01EB	$0871			MOVF	STACK_1, 0
$01EC	$3A00			XORLW	0
$01ED	$3001			MOVLW	1
$01EE	$1D03			BTFSS	STATUS, Z
$01EF	$3000			MOVLW	0
$01F0	$00F0			MOVWF	STACK_0
$01F1	$0870			MOVF	STACK_0, 0
$01F2	$05F2			ANDWF	STACK_2, 1
$01F3	$3000			MOVLW	0
$01F4	$1987			BTFSC	PORTC, 3
$01F5	$3001			MOVLW	1
$01F6	$00F1			MOVWF	STACK_1
$01F7	$0871			MOVF	STACK_1, 0
$01F8	$3A00			XORLW	0
$01F9	$3001			MOVLW	1
$01FA	$1D03			BTFSS	STATUS, Z
$01FB	$3000			MOVLW	0
$01FC	$00F0			MOVWF	STACK_0
$01FD	$0872			MOVF	STACK_2, 0
$01FE	$05F0			ANDWF	STACK_0, 1
$01FF	$1903			BTFSC	STATUS, Z
$0200	$2A23			GOTO	L_main_39
;joy_servo.c,299 :: 		front(); Delay_ms(1100); turn_right_auto();
$0201	$158A			BSF	PCLATH, 3
$0202	$2000			CALL	_front
$0203	$118A			BCF	PCLATH, 3
$0204	$300C			MOVLW	12
$0205	$00FC			MOVWF	STACK_12
$0206	$30FF			MOVLW	255
$0207	$00FB			MOVWF	STACK_11
$0208	$30FF			MOVLW	255
$0209	$00FA			MOVWF	STACK_10
$020A	$0BFC			DECFSZ	STACK_12, F
$020B	$2A0D			GOTO	$+2
$020C	$2A14			GOTO	$+8
$020D	$0BFB			DECFSZ	STACK_11, F
$020E	$2A10			GOTO	$+2
$020F	$2A13			GOTO	$+4
$0210	$0BFA			DECFSZ	STACK_10, F
$0211	$2A10			GOTO	$-1
$0212	$2A0D			GOTO	$-5
$0213	$2A0A			GOTO	$-9
$0214	$3038			MOVLW	56
$0215	$00FB			MOVWF	STACK_11
$0216	$30FF			MOVLW	255
$0217	$00FA			MOVWF	STACK_10
$0218	$0BFB			DECFSZ	STACK_11, F
$0219	$2A1B			GOTO	$+2
$021A	$2A1E			GOTO	$+4
$021B	$0BFA			DECFSZ	STACK_10, F
$021C	$2A1B			GOTO	$-1
$021D	$2A18			GOTO	$-5
$021E	$3096			MOVLW	150
$021F	$00FA			MOVWF	STACK_10
$0220	$0BFA			DECFSZ	STACK_10, F
$0221	$2A20			GOTO	$-1
$0222	$2693			CALL	_turn_right_auto
;joy_servo.c,300 :: 		}
$0223	$	L_main_39:
;joy_servo.c,301 :: 		front_auto();
$0223	$2343			CALL	_front_auto
;joy_servo.c,302 :: 		if(C6==0 & C4==0 & C3==0)
$0224	$3000			MOVLW	0
$0225	$1B07			BTFSC	PORTC, 6
$0226	$3001			MOVLW	1
$0227	$00F1			MOVWF	STACK_1
$0228	$0871			MOVF	STACK_1, 0
$0229	$3A00			XORLW	0
$022A	$3001			MOVLW	1
$022B	$1D03			BTFSS	STATUS, Z
$022C	$3000			MOVLW	0
$022D	$00F2			MOVWF	STACK_2
$022E	$3000			MOVLW	0
$022F	$1A07			BTFSC	PORTC, 4
$0230	$3001			MOVLW	1
$0231	$00F1			MOVWF	STACK_1
$0232	$0871			MOVF	STACK_1, 0
$0233	$3A00			XORLW	0
$0234	$3001			MOVLW	1
$0235	$1D03			BTFSS	STATUS, Z
$0236	$3000			MOVLW	0
$0237	$00F0			MOVWF	STACK_0
$0238	$0870			MOVF	STACK_0, 0
$0239	$05F2			ANDWF	STACK_2, 1
$023A	$3000			MOVLW	0
$023B	$1987			BTFSC	PORTC, 3
$023C	$3001			MOVLW	1
$023D	$00F1			MOVWF	STACK_1
$023E	$0871			MOVF	STACK_1, 0
$023F	$3A00			XORLW	0
$0240	$3001			MOVLW	1
$0241	$1D03			BTFSS	STATUS, Z
$0242	$3000			MOVLW	0
$0243	$00F0			MOVWF	STACK_0
$0244	$0872			MOVF	STACK_2, 0
$0245	$05F0			ANDWF	STACK_0, 1
$0246	$1903			BTFSC	STATUS, Z
$0247	$2A6A			GOTO	L_main_40
;joy_servo.c,304 :: 		front(); Delay_ms(1100); turn_left_auto();
$0248	$158A			BSF	PCLATH, 3
$0249	$2000			CALL	_front
$024A	$118A			BCF	PCLATH, 3
$024B	$300C			MOVLW	12
$024C	$00FC			MOVWF	STACK_12
$024D	$30FF			MOVLW	255
$024E	$00FB			MOVWF	STACK_11
$024F	$30FF			MOVLW	255
$0250	$00FA			MOVWF	STACK_10
$0251	$0BFC			DECFSZ	STACK_12, F
$0252	$2A54			GOTO	$+2
$0253	$2A5B			GOTO	$+8
$0254	$0BFB			DECFSZ	STACK_11, F
$0255	$2A57			GOTO	$+2
$0256	$2A5A			GOTO	$+4
$0257	$0BFA			DECFSZ	STACK_10, F
$0258	$2A57			GOTO	$-1
$0259	$2A54			GOTO	$-5
$025A	$2A51			GOTO	$-9
$025B	$3038			MOVLW	56
$025C	$00FB			MOVWF	STACK_11
$025D	$30FF			MOVLW	255
$025E	$00FA			MOVWF	STACK_10
$025F	$0BFB			DECFSZ	STACK_11, F
$0260	$2A62			GOTO	$+2
$0261	$2A65			GOTO	$+4
$0262	$0BFA			DECFSZ	STACK_10, F
$0263	$2A62			GOTO	$-1
$0264	$2A5F			GOTO	$-5
$0265	$3096			MOVLW	150
$0266	$00FA			MOVWF	STACK_10
$0267	$0BFA			DECFSZ	STACK_10, F
$0268	$2A67			GOTO	$-1
$0269	$2671			CALL	_turn_left_auto
;joy_servo.c,305 :: 		}
$026A	$	L_main_40:
;joy_servo.c,306 :: 		front_auto();
$026A	$2343			CALL	_front_auto
;joy_servo.c,307 :: 		if(C6==0 & C4==0 & C3==1)
$026B	$3000			MOVLW	0
$026C	$1B07			BTFSC	PORTC, 6
$026D	$3001			MOVLW	1
$026E	$00F1			MOVWF	STACK_1
$026F	$0871			MOVF	STACK_1, 0
$0270	$3A00			XORLW	0
$0271	$3001			MOVLW	1
$0272	$1D03			BTFSS	STATUS, Z
$0273	$3000			MOVLW	0
$0274	$00F2			MOVWF	STACK_2
$0275	$3000			MOVLW	0
$0276	$1A07			BTFSC	PORTC, 4
$0277	$3001			MOVLW	1
$0278	$00F1			MOVWF	STACK_1
$0279	$0871			MOVF	STACK_1, 0
$027A	$3A00			XORLW	0
$027B	$3001			MOVLW	1
$027C	$1D03			BTFSS	STATUS, Z
$027D	$3000			MOVLW	0
$027E	$00F0			MOVWF	STACK_0
$027F	$0870			MOVF	STACK_0, 0
$0280	$05F2			ANDWF	STACK_2, 1
$0281	$3000			MOVLW	0
$0282	$1987			BTFSC	PORTC, 3
$0283	$3001			MOVLW	1
$0284	$00F1			MOVWF	STACK_1
$0285	$0871			MOVF	STACK_1, 0
$0286	$3A01			XORLW	1
$0287	$3001			MOVLW	1
$0288	$1D03			BTFSS	STATUS, Z
$0289	$3000			MOVLW	0
$028A	$00F0			MOVWF	STACK_0
$028B	$0872			MOVF	STACK_2, 0
$028C	$05F0			ANDWF	STACK_0, 1
$028D	$1903			BTFSC	STATUS, Z
$028E	$2AB1			GOTO	L_main_41
;joy_servo.c,309 :: 		front(); Delay_ms(1100); turn_left_auto();
$028F	$158A			BSF	PCLATH, 3
$0290	$2000			CALL	_front
$0291	$118A			BCF	PCLATH, 3
$0292	$300C			MOVLW	12
$0293	$00FC			MOVWF	STACK_12
$0294	$30FF			MOVLW	255
$0295	$00FB			MOVWF	STACK_11
$0296	$30FF			MOVLW	255
$0297	$00FA			MOVWF	STACK_10
$0298	$0BFC			DECFSZ	STACK_12, F
$0299	$2A9B			GOTO	$+2
$029A	$2AA2			GOTO	$+8
$029B	$0BFB			DECFSZ	STACK_11, F
$029C	$2A9E			GOTO	$+2
$029D	$2AA1			GOTO	$+4
$029E	$0BFA			DECFSZ	STACK_10, F
$029F	$2A9E			GOTO	$-1
$02A0	$2A9B			GOTO	$-5
$02A1	$2A98			GOTO	$-9
$02A2	$3038			MOVLW	56
$02A3	$00FB			MOVWF	STACK_11
$02A4	$30FF			MOVLW	255
$02A5	$00FA			MOVWF	STACK_10
$02A6	$0BFB			DECFSZ	STACK_11, F
$02A7	$2AA9			GOTO	$+2
$02A8	$2AAC			GOTO	$+4
$02A9	$0BFA			DECFSZ	STACK_10, F
$02AA	$2AA9			GOTO	$-1
$02AB	$2AA6			GOTO	$-5
$02AC	$3096			MOVLW	150
$02AD	$00FA			MOVWF	STACK_10
$02AE	$0BFA			DECFSZ	STACK_10, F
$02AF	$2AAE			GOTO	$-1
$02B0	$2671			CALL	_turn_left_auto
;joy_servo.c,310 :: 		}
$02B1	$	L_main_41:
;joy_servo.c,311 :: 		front_auto();
$02B1	$2343			CALL	_front_auto
;joy_servo.c,312 :: 		if(C6==0 & C4==0 & C3==0)
$02B2	$3000			MOVLW	0
$02B3	$1B07			BTFSC	PORTC, 6
$02B4	$3001			MOVLW	1
$02B5	$00F1			MOVWF	STACK_1
$02B6	$0871			MOVF	STACK_1, 0
$02B7	$3A00			XORLW	0
$02B8	$3001			MOVLW	1
$02B9	$1D03			BTFSS	STATUS, Z
$02BA	$3000			MOVLW	0
$02BB	$00F2			MOVWF	STACK_2
$02BC	$3000			MOVLW	0
$02BD	$1A07			BTFSC	PORTC, 4
$02BE	$3001			MOVLW	1
$02BF	$00F1			MOVWF	STACK_1
$02C0	$0871			MOVF	STACK_1, 0
$02C1	$3A00			XORLW	0
$02C2	$3001			MOVLW	1
$02C3	$1D03			BTFSS	STATUS, Z
$02C4	$3000			MOVLW	0
$02C5	$00F0			MOVWF	STACK_0
$02C6	$0870			MOVF	STACK_0, 0
$02C7	$05F2			ANDWF	STACK_2, 1
$02C8	$3000			MOVLW	0
$02C9	$1987			BTFSC	PORTC, 3
$02CA	$3001			MOVLW	1
$02CB	$00F1			MOVWF	STACK_1
$02CC	$0871			MOVF	STACK_1, 0
$02CD	$3A00			XORLW	0
$02CE	$3001			MOVLW	1
$02CF	$1D03			BTFSS	STATUS, Z
$02D0	$3000			MOVLW	0
$02D1	$00F0			MOVWF	STACK_0
$02D2	$0872			MOVF	STACK_2, 0
$02D3	$05F0			ANDWF	STACK_0, 1
$02D4	$1903			BTFSC	STATUS, Z
$02D5	$2B3B			GOTO	L_main_42
;joy_servo.c,314 :: 		stop(); Delay_ms(500); crip_out_auto(); back(); Delay_ms(1000);
$02D6	$158A			BSF	PCLATH, 3
$02D7	$2063			CALL	_stop
$02D8	$118A			BCF	PCLATH, 3
$02D9	$3006			MOVLW	6
$02DA	$00FC			MOVWF	STACK_12
$02DB	$30FF			MOVLW	255
$02DC	$00FB			MOVWF	STACK_11
$02DD	$30FF			MOVLW	255
$02DE	$00FA			MOVWF	STACK_10
$02DF	$0BFC			DECFSZ	STACK_12, F
$02E0	$2AE2			GOTO	$+2
$02E1	$2AE9			GOTO	$+8
$02E2	$0BFB			DECFSZ	STACK_11, F
$02E3	$2AE5			GOTO	$+2
$02E4	$2AE8			GOTO	$+4
$02E5	$0BFA			DECFSZ	STACK_10, F
$02E6	$2AE5			GOTO	$-1
$02E7	$2AE2			GOTO	$-5
$02E8	$2ADF			GOTO	$-9
$02E9	$301A			MOVLW	26
$02EA	$00FB			MOVWF	STACK_11
$02EB	$30FF			MOVLW	255
$02EC	$00FA			MOVWF	STACK_10
$02ED	$0BFB			DECFSZ	STACK_11, F
$02EE	$2AF0			GOTO	$+2
$02EF	$2AF3			GOTO	$+4
$02F0	$0BFA			DECFSZ	STACK_10, F
$02F1	$2AF0			GOTO	$-1
$02F2	$2AED			GOTO	$-5
$02F3	$3042			MOVLW	66
$02F4	$00FA			MOVWF	STACK_10
$02F5	$0BFA			DECFSZ	STACK_10, F
$02F6	$2AF5			GOTO	$-1
$02F7	$158A			BSF	PCLATH, 3
$02F8	$2090			CALL	_crip_out_auto
$02F9	$118A			BCF	PCLATH, 3
$02FA	$158A			BSF	PCLATH, 3
$02FB	$2038			CALL	_back
$02FC	$118A			BCF	PCLATH, 3
$02FD	$300B			MOVLW	11
$02FE	$00FC			MOVWF	STACK_12
$02FF	$30FF			MOVLW	255
$0300	$00FB			MOVWF	STACK_11
$0301	$30FF			MOVLW	255
$0302	$00FA			MOVWF	STACK_10
$0303	$0BFC			DECFSZ	STACK_12, F
$0304	$2B06			GOTO	$+2
$0305	$2B0D			GOTO	$+8
$0306	$0BFB			DECFSZ	STACK_11, F
$0307	$2B09			GOTO	$+2
$0308	$2B0C			GOTO	$+4
$0309	$0BFA			DECFSZ	STACK_10, F
$030A	$2B09			GOTO	$-1
$030B	$2B06			GOTO	$-5
$030C	$2B03			GOTO	$-9
$030D	$3033			MOVLW	51
$030E	$00FB			MOVWF	STACK_11
$030F	$30FF			MOVLW	255
$0310	$00FA			MOVWF	STACK_10
$0311	$0BFB			DECFSZ	STACK_11, F
$0312	$2B14			GOTO	$+2
$0313	$2B17			GOTO	$+4
$0314	$0BFA			DECFSZ	STACK_10, F
$0315	$2B14			GOTO	$-1
$0316	$2B11			GOTO	$-5
$0317	$3088			MOVLW	136
$0318	$00FA			MOVWF	STACK_10
$0319	$0BFA			DECFSZ	STACK_10, F
$031A	$2B19			GOTO	$-1
;joy_servo.c,315 :: 		turn_right_auto(); Delay_ms(4000);
$031B	$2693			CALL	_turn_right_auto
$031C	$3029			MOVLW	41
$031D	$00FC			MOVWF	STACK_12
$031E	$30FF			MOVLW	255
$031F	$00FB			MOVWF	STACK_11
$0320	$30FF			MOVLW	255
$0321	$00FA			MOVWF	STACK_10
$0322	$0BFC			DECFSZ	STACK_12, F
$0323	$2B25			GOTO	$+2
$0324	$2B2C			GOTO	$+8
$0325	$0BFB			DECFSZ	STACK_11, F
$0326	$2B28			GOTO	$+2
$0327	$2B2B			GOTO	$+4
$0328	$0BFA			DECFSZ	STACK_10, F
$0329	$2B28			GOTO	$-1
$032A	$2B25			GOTO	$-5
$032B	$2B22			GOTO	$-9
$032C	$30CB			MOVLW	203
$032D	$00FB			MOVWF	STACK_11
$032E	$30FF			MOVLW	255
$032F	$00FA			MOVWF	STACK_10
$0330	$0BFB			DECFSZ	STACK_11, F
$0331	$2B33			GOTO	$+2
$0332	$2B36			GOTO	$+4
$0333	$0BFA			DECFSZ	STACK_10, F
$0334	$2B33			GOTO	$-1
$0335	$2B30			GOTO	$-5
$0336	$3029			MOVLW	41
$0337	$00FA			MOVWF	STACK_10
$0338	$0BFA			DECFSZ	STACK_10, F
$0339	$2B38			GOTO	$-1
$033A	$0000			NOP
;joy_servo.c,316 :: 		}
$033B	$	L_main_42:
;joy_servo.c,317 :: 		b++;
$033B	$0AA8			INCF	_b, 1
;joy_servo.c,318 :: 		}
$033C	$2B40			GOTO	L_main_43
$033D	$	L_main_35:
;joy_servo.c,558 :: 		else stop();
$033D	$158A			BSF	PCLATH, 3
$033E	$2063			CALL	_stop
$033F	$118A			BCF	PCLATH, 3
$0340	$	L_main_43:
;joy_servo.c,564 :: 		}
$0340	$28C0			GOTO	L_main_33
;joy_servo.c,565 :: 		}
$0341	$	L_main_32:
;joy_servo.c,566 :: 		}
$0341	$283A			GOTO	L_main_19
;joy_servo.c,567 :: 		}
$0342	$2B42			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main
$0343		front_auto
$0481		Lcd_Init
$04E3		Lcd_Cmd
$0529		Mul_16x16_S
$0573		PWM1_Change_Duty
$05AC		PWM2_Change_Duty
$05E5		crip_in
$0618		crip_out
$0649		PSX_TxRx
$0671		turn_left_auto
$0693		turn_right_auto
$06B5		start_pwm
$06D0		turn_around_right
$06E8		turn_around_left
$0700		turn_right
$0800		front
$081C		turn_left
$0838		back
$0854		stop_pwm
$0863		stop
$0872		Delay_5500us
$0883		crip_in_auto
$0890		crip_out_auto
$089D		PWM1_Start
$08A5		PWM2_Stop
$08AD		PWM1_Stop
$08B5		PWM2_Start
$08BD		Delay_50us
$08C4		PWM2_Init
$08CA		PWM1_Init
$08D0		Delay_1us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$003A		L_main_19:
$005A		L_main_21:
$0061		L_main_22:
$0068		L_main_23:
$006D		L_main_24:
$0072		L_main_25:
$0079		L_main_26:
$007E		L_main_27:
$0083		L_main_28:
$0088		L_main_29:
$008D		L_main_30:
$0094		L_main_31:
$00C0		L_main_33:
$010B		L_main_36:
$0152		L_main_37:
$01DC		L_main_38:
$0223		L_main_39:
$026A		L_main_40:
$02B1		L_main_41:
$033B		L_main_42:
$033D		L_main_35:
$0340		L_main_43:
$0341		L_main_32:
$0343		_front_auto:
$0343		L_front_auto_6:
$03F8		L_front_auto_8:
$043C		L_front_auto_10:
$047F		L_front_auto_11:
$047F		L_front_auto_12:
$047F		L_front_auto_9:
$0480		L_front_auto_7:
$0481		_Lcd_Init:
$04E3		_Lcd_Cmd:
$04EA		L_Lcd_Cmd_0:
$04FD		L_Lcd_Cmd_1:
$04FE		L_Lcd_Cmd_2:
$0505		L_Lcd_Cmd_3:
$0518		L_Lcd_Cmd_4:
$0519		L_Lcd_Cmd_5:
$0525		L_Lcd_Cmd_6:
$0528		L_Lcd_Cmd_7:
$0529		_Mul_16x16_S:
$0573		_PWM1_Change_Duty:
$0587		L_PWM1_Change_Duty_2:
$058E		L_PWM1_Change_Duty_3:
$05AC		_PWM2_Change_Duty:
$05C0		L_PWM2_Change_Duty_0:
$05C7		L_PWM2_Change_Duty_1:
$05E5		_crip_in:
$0618		_crip_out:
$0649		_PSX_TxRx:
$064F		L_PSX_TxRx_0:
$065C		L_PSX_TxRx_3:
$065D		L_PSX_TxRx_4:
$0669		L_PSX_TxRx_5:
$066C		L_PSX_TxRx_2:
$066E		L_PSX_TxRx_1:
$0671		_turn_left_auto:
$0693		_turn_right_auto:
$06B5		_start_pwm:
$06D0		_turn_around_right:
$06E8		_turn_around_left:
$0700		_turn_right:
$0800		_front:
$081C		_turn_left:
$0838		_back:
$0854		_stop_pwm:
$0863		_stop:
$0872		_Delay_5500us:
$0883		_crip_in_auto:
$0886		L_crip_in_auto_16:
$088D		L_crip_in_auto_18:
$088F		L_crip_in_auto_17:
$0890		_crip_out_auto:
$0893		L_crip_out_auto_13:
$089A		L_crip_out_auto_15:
$089C		L_crip_out_auto_14:
$089D		_PWM1_Start:
$08A5		_PWM2_Stop:
$08AD		_PWM1_Stop:
$08B5		_PWM2_Start:
$08BD		_Delay_50us:
$08C4		_PWM2_Init:
$08CA		_PWM1_Init:
$08D0		_Delay_1us:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$0008		PORTD
$000A		PCLATH
$0012		T2CON
$0015		CCPR1L
$0017		CCP1CON
$001B		CCPR2L
$001D		CCP2CON
$0020		LCD_port_address
$0021		LCD_cmd_status
$0022		_i
$0023		_PSX_IN
$0024		_PSX_ID
$0025		_PSX_STATUS
$0026		_PSX_Left
$0027		_PSX_RIGHT
$0028		_b
$0029		FARG_Lcd_Cmd+0
$0029		FARG_Lcd_Init+0
$0029		FARG_PSX_TxRx+0
$002A		PSX_TxRx_BYTE_IN_L0
$002B		PSX_TxRx_j_L0
$002C		FARG_PWM1_Init+0
$002C		FARG_PWM2_Init+0
$0030		FARG_PWM1_Change_Duty+0
$0030		FARG_PWM2_Change_Duty+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$0088		TRISD
$0092		PR2
$0188		ANSEL
$0189		ANSELH


